(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    345873,       7709]
NotebookOptionsPosition[    337224,       7459]
NotebookOutlinePosition[    337600,       7476]
CellTagsIndexPosition[    337557,       7473]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
This notebook is associated with the paper \[OpenCurlyDoubleQuote]Quantum \
hypothesis testing in many-body systems\[CloseCurlyDoubleQuote] by Jan de \
Boer, Victor Godet, Jani Kastikainen and Esko Keski-Vakkuri \
(arxiv.org/abs/2007.11711).

It implements measurements of a qubit in the context of (asymmetric) quantum \
hypothesis testing. The measurement is applied to N copies of the system and \
optimized to distinguish between two given states of the qubit.

This notebook contains an implementation of the optimal measurement and of a \
suboptimal but simpler measurement: the likelihood ratio test (which can also \
be performed with the quantum circuit given in Figure 5). These two \
measurements are compared and plots (given in Figure 6) are generated. 

We also compute the various information quantities (the relative entropy and \
the relative entropy variance) appearing in these measurements. \
\>", "Text",
 CellChangeTimes->{{3.804431853934187*^9, 3.80443190344306*^9}, {
  3.8044319335492*^9, 3.804431982935939*^9}, {3.8046301849950743`*^9, 
  3.804630263371574*^9}, {3.804630377571432*^9, 3.80463044617386*^9}, {
  3.804630476718945*^9, 3.804630508578476*^9}, {3.80463061757055*^9, 
  3.80463064121824*^9}, {3.8046306819682426`*^9, 3.804631059608734*^9}, {
  3.8046318713103523`*^9, 3.804631875502583*^9}, {3.8046319788161697`*^9, 
  3.8046319962279377`*^9}, {3.8046320315570374`*^9, 3.804632031687545*^9}}],

Cell[CellGroupData[{

Cell["Quantum hypothesis testing for a qubit", "Section",
 CellChangeTimes->{{3.8044487921712*^9, 3.804448798179165*^9}}],

Cell[CellGroupData[{

Cell["Setup", "Subsection",
 CellChangeTimes->{{3.804432086765382*^9, 3.804432087355899*^9}}],

Cell["We define the two states \[Rho] and \[Sigma] of the qubit.", "Text",
 CellChangeTimes->{{3.804432101372726*^9, 3.80443211262691*^9}, {
  3.804448836524974*^9, 3.804448841513619*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$Assumptions", "=", 
    RowBox[{"And", "[", 
     RowBox[{
      RowBox[{"E0", ">", "0"}], ",", 
      RowBox[{"E1", ">", "0"}], ",", 
      RowBox[{"E0", ">", "E1"}], ",", 
      RowBox[{"\[Theta]", ">", 
       RowBox[{"-", "\[Pi]"}]}], ",", 
      RowBox[{"\[Theta]", "<", "\[Pi]"}], ",", 
      RowBox[{"p", ">", "0"}], ",", 
      RowBox[{"p", "<", 
       FractionBox["1", "2"]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rot", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{"(", GridBox[{
      {
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "E0"}]], "0"},
      {"0", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "E1"}]]}
     }], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", "Rot", "]"}], ".", "\[Sigma]", ".", "Rot"}], "//",
      "Simplify"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Etop", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"E0", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "p", "]"}]}]}], ",", 
     RowBox[{"E1", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "p"}], "]"}]}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796010112307666*^9, 3.796010118921777*^9}, {
   3.796010237641448*^9, 3.7960102511078453`*^9}, {3.796487484779846*^9, 
   3.7964874850143213`*^9}, {3.796487519755267*^9, 3.79648753998312*^9}, {
   3.796488121378644*^9, 3.796488144245932*^9}, 3.8044320944614353`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.796010605439323*^9, 3.796010609098873*^9}, 
   3.796488731189907*^9, {3.796488771926395*^9, 3.7964887728453007`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "E0"}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "E1"}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "E0"}]]}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "E1"}]]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
     {
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "E0"}]]}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "E1"}]]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "E1"}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "E0"}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7960106093726387`*^9, 3.796020368988873*^9, 3.796021692031571*^9, 
   3.7960222929685926`*^9, 3.796023774755472*^9, {3.796023810636462*^9, 
   3.796023828258533*^9}, 3.796475974988714*^9, 3.796482859169404*^9, 
   3.7964874884593*^9, 3.796487542152351*^9, 3.796488731435326*^9, 
   3.796488773001093*^9, 3.796613377004321*^9, 3.796613461070401*^9, 
   3.796613499565792*^9, {3.8044320907312183`*^9, 3.804432095512537*^9}, 
   3.804630117884547*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Information quantities", "Subsection",
 CellChangeTimes->{{3.7964758546784573`*^9, 3.796475857264605*^9}, {
  3.796475986801511*^9, 3.7964759874958067`*^9}, {3.7964874396510963`*^9, 
  3.79648744324022*^9}}],

Cell["\<\
We compute the information quantities which appear in the measurement \
protocols: the relative entropy and the relative entropy variance.\
\>", "Text",
 CellChangeTimes->{{3.804432125887004*^9, 3.804432154153317*^9}, {
   3.804448827485442*^9, 3.804448829217937*^9}, 3.8046301244769917`*^9, {
   3.8046310798047943`*^9, 3.8046310831886587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S\[Rho]", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Tr", "[", 
     RowBox[{"\[Rho]", ".", 
      RowBox[{"MatrixLog", "[", "\[Rho]", "]"}]}], "]"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.796010289540763*^9, 3.796010303321415*^9}, {
  3.796010467720419*^9, 3.796010469936039*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "E0"}]], " ", "E0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "E1"}]], " ", "E1"}]}]], "Output",
 CellChangeTimes->{{3.796010291554143*^9, 3.7960103039055223`*^9}, 
   3.796010412992571*^9, {3.796010446320876*^9, 3.7960104706067038`*^9}, {
   3.796023811157906*^9, 3.796023828618655*^9}, 3.796475975958202*^9, 
   3.796482861188833*^9, 3.7964874923800783`*^9, 3.796487542675584*^9, 
   3.796613377663138*^9, 3.7966134616672564`*^9, 3.796613500874935*^9, 
   3.804432156526966*^9, 3.804630121777915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S\[Rho]\[Sigma]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"\[Rho]", ".", 
      RowBox[{"MatrixLog", "[", "\[Rho]", "]"}]}], "]"}], "-", 
    RowBox[{"Tr", "[", 
     RowBox[{"\[Rho]", ".", 
      RowBox[{"MatrixLog", "[", "\[Sigma]", "]"}]}], "]"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.79600961168744*^9, 3.796009671939971*^9}, 
   3.796010531771636*^9, {3.79601087928655*^9, 3.796010909192566*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "E0"}], "-", "E1"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", "E0"], "-", 
    SuperscriptBox["\[ExponentialE]", "E1"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"E0", "-", "E1"}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.796009645854505*^9, 3.796009673247765*^9}, 
   3.7960098532551823`*^9, 3.7960105356317797`*^9, {3.7960108839455347`*^9, 
   3.7960109096661253`*^9}, {3.796023812221158*^9, 3.796023830328422*^9}, 
   3.7964759777106447`*^9, 3.796487497687439*^9, 3.79648754408352*^9, 
   3.796613378473126*^9, 3.79661346429002*^9, 3.796613501704289*^9, 
   3.8044321587506447`*^9, 3.8046301272607937`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S\[Rho]\[Sigma]", "/.", "Etop"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.796488153557334*^9, 3.796488157090423*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "p"}]}], ")"}]}], " ", 
  RowBox[{"Log", "[", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox["1", "p"]}], "]"}], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.796488155555908*^9, 3.79648815729044*^9}, 
   3.796613381793097*^9, 3.796613465439117*^9, 3.7966135035813293`*^9, 
   3.8044321684288797`*^9, 3.8046301287690477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V\[Rho]\[Sigma]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"\[Rho]", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixLog", "[", "\[Rho]", "]"}], "-", 
        RowBox[{"MatrixLog", "[", "\[Sigma]", "]"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixLog", "[", "\[Rho]", "]"}], "-", 
        RowBox[{"MatrixLog", "[", "\[Sigma]", "]"}]}], ")"}]}], "]"}], "-", 
    SuperscriptBox["S\[Rho]\[Sigma]", "2"]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.796487639250453*^9, 3.7964876938803587`*^9}, {
  3.7964877450265903`*^9, 3.7964877456003027`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"E0", "+", "E1"}], ")"}]}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"E0", "-", "E1"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "E0"}]]}], "-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "E1"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"E0", "+", "E1"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "E0"}], "+", "E1"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"E0", "+", 
       RowBox[{"2", " ", "E1"}]}]]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E0"], "-", 
        SuperscriptBox["\[ExponentialE]", "E1"]}], ")"}], "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.79648766330121*^9, 3.796487695032337*^9}, 
   3.7964877464146833`*^9, 3.7964881620189333`*^9, 3.7966133827638893`*^9, 
   3.796613466281149*^9, 3.796613504720662*^9, 3.804432172713437*^9, 
   3.804630129928421*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V\[Rho]\[Sigma]", "/.", "Etop"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.796488001767745*^9, 3.796488007444519*^9}, {
  3.796488163938788*^9, 3.7964881688417253`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"4", " ", "p"}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["p", "2"]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "p"}]}], ")"}], "2"], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     FractionBox["1", "p"]}], "]"}], "2"], " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.796488002715796*^9, 3.7964880077414923`*^9}, {
   3.796488166509472*^9, 3.796488169115274*^9}, 3.796613384099263*^9, 
   3.796613467704358*^9, 3.79661351057694*^9, 3.8044321740595913`*^9, 
   3.8046301318456697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Perturbative ratio", "Subsubsection",
 CellChangeTimes->{{3.796613385138225*^9, 3.7966133929801083`*^9}}],

Cell["\<\
We plot the perturbative ratio V/S, for which a lower bound is proven in \
section 3.2 \
\>", "Text",
 CellChangeTimes->{{3.8044321830335073`*^9, 3.804432206074582*^9}, {
  3.804630140688218*^9, 3.804630148473667*^9}, {3.8046311034525023`*^9, 
  3.804631111617765*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S2\[Rho]\[Sigma]", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"S\[Rho]\[Sigma]", "/.", "Etop"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796613394400003*^9, 3.79661340456746*^9}, {
  3.7966135134241734`*^9, 3.796613515584322*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "p"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "p"}], "]"}], "-", 
       RowBox[{"Log", "[", "p", "]"}]}], ")"}], " ", 
     SuperscriptBox["\[Theta]", "2"]}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Theta]", "]"}], "3"],
    SeriesData[$CellContext`\[Theta], 0, {}, 2, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Theta], 
   0, {-(-1 + 2 $CellContext`p) (Log[1 - $CellContext`p] - 
     Log[$CellContext`p])}, 2, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.796613515826103*^9, 3.804432207070496*^9, {3.804630134114572*^9, 
   3.804630150152399*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V2\[Rho]\[Sigma]", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"V\[Rho]\[Sigma]", "/.", "Etop"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7966134098565617`*^9, 3.7966134119137774`*^9}, 
   3.796613517982092*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", "p"}], "]"}], "-", 
       RowBox[{"Log", "[", "p", "]"}]}], ")"}], "2"], " ", 
    SuperscriptBox["\[Theta]", "2"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Theta]", "]"}], "3"],
    SeriesData[$CellContext`\[Theta], 0, {}, 2, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Theta], 
   0, {(Log[1 - $CellContext`p] - Log[$CellContext`p])^2}, 2, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.796613412076977*^9, 3.796613469548526*^9}, 
   3.796613518340385*^9, 3.804432207730686*^9, 3.804630150706295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    FractionBox["V2\[Rho]\[Sigma]", "S2\[Rho]\[Sigma]"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"p", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7966135228857594`*^9, 3.796613536464723*^9}, {
  3.8044322123609543`*^9, 3.804432212488536*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {2.0000000157881015`, 4.063915881790821}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7966135273082867`*^9, 3.796613554035763*^9}, 
   3.804432217389402*^9, 3.804630151675089*^9}]
}, Open  ]],

Cell["\<\
Consistently with our lower bound, the ratio is larger than two, with \
equality when the two density matrices commute.\
\>", "Text",
 CellChangeTimes->{{3.8044322232880573`*^9, 3.8044322826843224`*^9}, {
  3.804631119303863*^9, 3.804631136041759*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diagonal part", "Subsubsection",
 CellChangeTimes->{{3.7964876237827168`*^9, 3.7964876254018173`*^9}}],

Cell["\<\
We also compute information quantities involving the diagonal part of \[Rho], \
denoted \[Rho]D. These appear in the likelihood ratio test.\
\>", "Text",
 CellChangeTimes->{{3.804432288813465*^9, 3.804432343474678*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]D", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"\[Rho]", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.796009380397765*^9, 3.796009392419201*^9}, {
  3.796010483485783*^9, 3.796010488970429*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "E0"}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "E1"}]], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "E1"}]], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "E0"}]], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.796009392692441*^9, 3.796009416454116*^9}, 
   3.796010489497466*^9, {3.7960238116836643`*^9, 3.796023829640333*^9}, 
   3.796475976901451*^9, 3.796487494071965*^9, 3.7964875432903423`*^9, 
   3.7964881831884193`*^9, 3.804432349513197*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"S\[Rho]D\[Sigma]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"\[Rho]D", ".", 
      RowBox[{"MatrixLog", "[", "\[Rho]D", "]"}]}], "]"}], "-", 
    RowBox[{"Tr", "[", 
     RowBox[{"\[Rho]D", ".", 
      RowBox[{"MatrixLog", "[", "\[Sigma]", "]"}]}], "]"}]}], "//", 
   "Simplify"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "E0"}], "-", "E1"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E1"], " ", "E0"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E0"], " ", "E1"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E0"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E1"}]], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E0"}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E1"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E0"}]], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E1"}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E0"], " ", "E0"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E1"], " ", "E1"}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E1"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E1"}]], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E0"}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E0"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E0"}]], " ", 
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", "E1"}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}], ")"}],
      " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7964875710241213`*^9, 3.796488185363555*^9, 
  3.804432350846315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"S\[Rho]D\[Sigma]", "/.", "Etop"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.796488189709714*^9, 3.796488197245236*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "p"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "p"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", "p"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], "]"}]}], "-", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", " ", "p"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], "]"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.79648819355355*^9, 3.79648819993316*^9}, 
   3.804432353254722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V\[Rho]D\[Sigma]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Tr", "[", 
     RowBox[{"\[Rho]D", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixLog", "[", "\[Rho]D", "]"}], "-", 
        RowBox[{"MatrixLog", "[", "\[Sigma]", "]"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MatrixLog", "[", "\[Rho]D", "]"}], "-", 
        RowBox[{"MatrixLog", "[", "\[Sigma]", "]"}]}], ")"}]}], "]"}], "-", 
    SuperscriptBox["S\[Rho]D\[Sigma]", "2"]}], "//", "Simplify"}]}]], "Input",\

 CellChangeTimes->{{3.79648775750196*^9, 3.79648776963236*^9}, {
  3.7964878084994698`*^9, 3.796487808926914*^9}, {3.796487883301444*^9, 
  3.79648788396952*^9}, {3.796487933105668*^9, 3.796487960644333*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"E0", "+", "E1"}], ")"}]}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"E0", "+", "E1"}]], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "E1"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "E1"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "E0"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E1"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E0"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"E0", "+", "E1"}]], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "E0"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "E0"], " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", "E1"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]], "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E0"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", "E1"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E1"], " ", "E0"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E0"], " ", "E1"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E0"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E1"}]], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E0"}]], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "+", 
          
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E1"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E0"}]], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E1"}]], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E0"], " ", "E0"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E1"], " ", "E1"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E1"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E1"}]], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E0"}]], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], "+", 
          
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "E0"], " ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E0"}]], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", "E1"}]], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}]}], 
         ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.796487771278792*^9, 3.79648788177647*^9, {3.796487931699148*^9, 
   3.7964879623040113`*^9}, 3.7964881872408323`*^9, 3.804432355640706*^9}]
}, Open  ]],

Cell["\<\
We compare S(\[Rho]||\[Sigma]) with S(\[Rho]D||\[Sigma]). This indicates how \
the likelihood ratio test compares to the optimal measurement.\
\>", "Text",
 CellChangeTimes->{{3.8044323744888697`*^9, 3.804432412415503*^9}, {
  3.8046311646872683`*^9, 3.804631169139618*^9}, {3.80463125350527*^9, 
  3.804631264518299*^9}, {3.804631295921389*^9, 3.804631306222522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"evParam", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"E1", "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "p", "]"}]}]}], ",", 
      RowBox[{"E0", "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "p"}], "]"}]}]}]}], "}"}], "/.", 
    RowBox[{"p", "\[Rule]", "0.1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"compareDiag", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S\[Rho]\[Sigma]", "/.", "evParam"}], ",", 
      RowBox[{"S\[Rho]D\[Sigma]", "/.", "evParam"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7964875907237186`*^9, 3.796487617731002*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwVmnk41N8Xx5FlxhJmyFhDtixl14JzKUKyJUlJQlIRkvpKhGRfKyV72bOW
JGtkT7bsUhKSys6YJX6f3z8zz+uZeT5z7jnv97n33GckLl63cmFiYGB4jr38
/31HA3v3D40g3TctDa/0DMR1xHeJy4g9dACGg4xfax3Hddcn4s1GE6+DyDhP
t64jTdd9BNfCW3ILXGa8nJQ+7YRJvY6pysRAcC+38Zm7IAwFg0cZSmpCQFRV
oyDVSRouskvHMZSEQZqHuGxd1z4QARaxk5lRMHzG3mB2XR0Gb8wU5STGAe4n
Yrhw4TAcG5gS9W9KAHLsy6YpKz3IXrByyal5CLaD5pNsTgbAgP9Q1F3xGHQM
gp1TJo3Bfo/aGrn4CXh+U156+tEMqnVeHJbISwZJnx9f/vFawS5bYohJZgpY
tz81/LZmDb3Rq7xpiRmQQPaszD1/FpI+lyv+aMkE3yz7gAcz56F50q33VlMW
2Mq4/rxv6QgStFGBrJoXsGTeL7FxwQUscIk1GlXZUAh732cluEIAv4lDZ0UO
JKOdh59MuMHY/urc1eI8uKoYVm3T5gE4HW+T8MJ8SKPZ02JeeYKWifyCSF4B
BKRdbODh9oZHzs80DDNfQm7w+PnlJR84kezX/DSxFBSN9qVtnL4DuicFK5KO
lcGdIxJur4h3YfDMOsv3ljIINlg9wTQRADtciwtuNpXD20qpMgXTILgQJLqc
XvMaJqfcz/bZhgI5jKL/62AFrJbUjs1cewCxsYOP1KoqoD6c6V1tWBjUpsQc
aK94A6NHI3WL+yJAsPJf4HLxW2Dbkn31X2UslNWO9h1WrIJzXiufEEM8GH14
s+dBYRVk/GQxzsqPB99e9zahvHewYTSte3NHIvTPT+w8mlkDwyyqHjbfH0H0
7vq0pMQGkIpWNLfXSQHDjykq77neQ03Duc5z8qnQ+sCWT8PqPWR9tKvRE06D
tn99o2Lj7yHz29jLt7gMaP/d7LzypxHGGVqPCkVkQWdboV8yTzOwNDB+V1/M
AZMQV/udp5pBMkZ67Nn9XOjUlUIhyc3gSY79+Us4Dz6+SWNxl2yBbzax4cgi
H7pexMcj9VbgVyq/UttTCJ8CfXN/nm4H5TSr2Ry+MjA7rBZxLrUdcnCTCb4e
ZdC9sXi1b7IdeEmJXzQ6MHZ3U6lx64A0X9bSgKBy6D57rjb2TidE6okUKv17
Bb1a+v0aGV2QyPMyPlO8EubJrNt6N3qBPhfPmslXB9t7TjRrPeyFb7nlu4NC
6oDP4mGE0utekF421JJerQPI380nuNoLEarPXlQM1MMj2wN7l7z7gBIeife2
eA+679xOpnv3g/AX4bW4fU2Q4NeVR/UaAIZw+8ovyq2Qm0twX0oYgPeXJHnY
fVqhtt9WdbZ8APgefjic8LYVZuVnavuWsc/9+6gvoQ0Ojf/ry/cahApbsWwO
63aYPryfbuM1BPcydk9pxnTCgX8JFq89R+BrO8cRA+iBQ/5XnuDiR+Cuguuv
lKgeOEzT/2pfOgJpsj2KaKQHdCmrV3ELI8Bx/ZjqgYO9cGT9VJj91VGos+Ov
VxvsBbO/gvVsl8bgTlUBaPH1g8tElsK5s18gLbPgqmPxAHR8tQ1h2jMJByO+
ZjocGQOkb03LvTgNTdqSVZ2zP8DO03jpzZk5ePUrVYnSMA/1EvLB73P+wOtY
HR4n8WWwfir/YsJjCXzEDh9ae7oGbFNF7rW+S/BHbO9f5Zw1qFbYfyAlYAmi
bnPouZavgXiD2ifb2CX47nIt9X3HGvyd0SZ/Ll6C6HqtESnqGjxQMz/e+WcJ
shYrlQrOrENV943VyivLcM8nhm5B3ICrpI26x97LwDYvfeml2AaIXbwd7uO3
DHNfz+3Y2rsB99f9RVUjl+GZ00hRFNoAS5EHx4oLlqHqL3fUMfcNmHd7mvJi
bhlmDY1ZD7RsgDBL3ZH4SyvA2twq/8qDDAPS/7EIXl+B8h1t57/8R4ZYQ422
rFsrkAv6X2j3ycAUXmzyOnwFPDj4goRSyDDHnm45VLgCbDH1hMFWMlTyBDqI
LK4Al+FSiLrIJvb7enfyb62CxJn3RUb1m8Cu809b5d4qMOysCmBu34Rm+3db
78JXIaplWrSibxMOZKgEf0xeBbvhz08WpjdBTFIyYqFmFbxTBo162CnwR3bH
E3WGNajyUj6qaU2BMLWWV+/D1+DysdYaqwkKDB27Y1wVvwaBDhzc89MUkDqn
MlmK1WXeXz735h8KNN1P48rIXwN/D2KwG40CW4M3L99tXwP22p8SH0hU8L0t
I3YItw78FTtea1lSoSX6S4UKzzq0a2eOc9tSgS8r8fhe0jr8KZwaHD9PhVcd
W7dJcusQ95+HlPk1KiwIDX/eOLYOYXu+Xn/+gAqX6sIiXoetwxIDn9BGFRXe
9OmIv4xbB9rURzNcAxWYZ1crnz9ZB7VT+EWuFio833lhOiFvHbJu6dit9lLh
q8MB8GxbB5ExJy2ZOSrYMP1aU2TbgGPtLXyyfDTI2ZURJcW9AUzKWRbugjRY
kz8lKSKwAeSvdum5YjRIPNloziG7AV9ia+1W5GjQnZ1c+MtwA0K2LTv+atPA
4JjJhdwHmA701g94XqSB+ZLz8M3YDWhxCFjsvkSDM8mBZgZJG3DvMmlR/CoN
3H9XaE/nbEBtPOFd+g0aPI7bLSiJ6cifrYeN8T4NZobX+tJ2kCF64beG/XMa
LN7jNnbnIMNhEabChRwaUPbKv9cmkmH19Jb8jQIacPk7lIxLkuE+i6nhqTIa
aIh3Rgrqk2FS+lLY3ToahF7OOPL4HhnCU5JDzw7SII63uto5nAxykkMWIiM0
SK4eUFGPJwO+UorSM0aDYk528c8ZZEi/93aIe5IGg2U+dJ4GMvjrlNxb/kWD
b2fibkxiOi1RE1s0+kODX0yF86XdGN91kX24QIN/1t9GzL6SwTX545/tFRpI
U4zfRP8jw/SXlfhDNBrsf+6seI5lE7gMmohy/2hw8HjgCwWuTeiUtbbAbdPg
RFpFQiemewHOnMVMJjqcNuzBPZPahNboDbMzzHRwXPwV6Ka4CY8j9jsys9Lh
pt5uD5z2JgRfwD1VxdMhcP7gzPCRTXCUyXz3hp0OEQ+tz+Ud34Qmfe5wBU46
pM1EmBie3QRRpkXpxZ10yIvNbuR32oRyhboVbR46lGs1HJi5sgkBNaKud3np
0BKxJnPfbxO4t7/oDRHpMIQ3fvwveBO6ZMkTLPx0mI1I23ErahNCJt7XS++i
Axm/4rX0EItfkDylIUAHXKThpFvqJvy9c9lYk0QHEnuK2Y/sTdhvub4kI0iH
vZGLteeKN0EwLm6ETYgOJpFPk80xnyv6czo/E6aDHftfto7WTbD/T4HVVIQO
VyP1fPV7NuHI3d7pvxj7sydN1wxvQsqMwXagKB2iI+etNCY3QarxpzWTGB1S
2aGxZG4TbHr3zPhgXBz5cL/c8ib8C/2vdBjjeva5tCzKJoyz+b2W302H7kht
TmEmCgjsb19yx/gre4LfI6xv5IaTXLMwXoycmeMiUiD/lMquFowZOA6dDhOm
wIuo+X8jGPNExbYwSFGgeEBJbAJjCY4fan6KFIiM2/Dtw1g1Suv5qjoFynos
cZUY63NE87jrUEDH/nx/JMYnoyYDZg0o0FZhOmiOsTOHxl8HMwposDnwsmDs
ExVxdtSGAtcO/npQiMUfyvG1w8qBAis/LDQRxklRqge6XCngb8Ul3orlI5cj
LNfAkwIeIXlHtTF+GzXO13CbAuqy1dnPsfy1cyiHHAiiwPOMZUTB8j0SdX+5
PIICKtscQgjjOY5RB4VECojgRpVvYfWhRCl1Zz+jQLjCoQfpWP3YOYO1xV5Q
IDBcUrgSq69Q9FDhk5cU+DGftFSH1V+eU0GQt4ICBzuL2SoxfRyODgyLrKVA
nFGcYzqmn3PRcs53P1Hg00bhFGD6usZ5t39jkAJsr2M4KZj+7kb3Ic+vFJjb
Ex3wHNNnerSfqNMiBR6ZLKJWLjp8j+4aMuKlgnFRqbslGx1WOCUMmgSpwB1x
ijWGhQ5MMTdfH5akQqsr23rVDjpIxYjF71OjwsuUwS/fMb9divE05jtFBRWV
SeJtMg18uVrexthTge3U/mea6zQIixGUYbtEBdPEb+EzmJ/zY5qYqL5UsGwc
K+DD/D4fw1f77SkV+o5aHav6QYN4RqfttkwqPA470Lf3Ow00b5brl+VTQY10
ZTzmKw2Cz5l13MP6uNvDBT+lURoIKoQPSYxgff+akMrHTzSoTx8SZJ+kQq1G
KltfJw2cCdL2Kz+pANq6Ph1tNCijNP5oIlMh8WercGIjDYzaaUtOAjTYF81E
Da6gwcJhE3XT3TQQMNQfFi2nwaPSp7fUZWnw9GOd08tiGkwmaWwxa9Fg7OXf
J+m5NLjlcp0j14YG6Fdx98wTGuQy/ZCee0yD7LCdRdRbNDD1VXHrTaPBydi7
Sk1Yv175FVhUhfVhWWahZ/7XaaDbJ6IW8YYG4neTDTqxfj+YYYPksT5br19m
32FNA2adTrtrfHTg9+m7Y7ePBo63yuOWEulAj9O1nB+mws6mg53BKVjf6bj2
+FkfFao5m5j5s+mQ+GtFXfsjFQjP+/87+AbTbf6pFyfrqdDcteoUPIz5xtZw
58ALKtbHNQ/wifyDEvHVUQls/1zsqp7UyvkHM7KH4uRXKJAqcES4s/gfmL1P
zuefp4DRxY+nzlX+A4Z5ouzqdwpkksc777X9g4fhjbdD+yhgJfmvouPXPziw
ZHIbV0aBylsQcXbfFujOTDnHX6HAXclmlcC3W3D3pNvawuAmTDOWm/5q2IJ0
/4i7rl2bYPo9zfVk+xb8yWWVGWjaBKHMW2myo1ug1nZ/O6J0E6pEFfC91C3Y
cnRmcAvfhDVS4qS47jaczshp+qe1Cde4L8Q1NW+DZ2WgTF8sGfZt3d1gcmNA
1nUt+XWiG1Dk6uWxeI0BnRS34L1K2ACFPufZcU8G9MB2pJkH29flso8PVdxm
QCrJKQcMltZBwkSw8lI4A1rQSX5wsmkd+JIqbnbmMSCbJU8vbpd1oCr9XkuY
ZUBX2JeTTmLnzTZ721VxZ0ZkHz/b8Yy4Cirp7sN3fZhQkdHrPf3TC3DUstHu
jfcOJPdEdTF24ScozJi3KDxgRvt6/EMYyydhxE0xziWSGfFEWSROPZ6EBwu4
MxmxzMgkYTGo128SJsmNfwhPmBFV087/89FJeMSuzkfNY0b6Hd4WK6++AX0/
yam9gxmpnflNrWb/Ct1+kwwuXCxIR92gt7R3DLx5vLTTH7GgwC9zbQlNAzAf
2+kZ95QF9Yd8Dst8MgAXuaRy7qWyoJs2G7/6rg2AJfswl1M2C3oQQzycJjAA
ysw632QrWJD3wfBHYx6fYYGMCy7/zIIqpZT6iVL9cOVbZlszgRX93U4zUjrV
A1P2VNqbXayodE+nQhyuB+y+nFTOE2JFprsi96PabjAeZU2OkGRFtY4r7+Ol
ukHu87UrZqqsSG+rlLi22QWzrQe4RixZ0Z29x6uZyjvBqaTX6nc8KzrBZVi2
90IrnCe1Bas8ZkXas+QrV0itYBdc9+pWMiuaCV+zJ/S1gIVNIYH5OSuKl9qn
mnykBbS3QvpFXrOixT1WDlFKzcBnpmVlNsiKFLZYswz5m4C7Sin40SgrUm08
xy4+0AjsklKvxiZYUdll6SiXh43AsMFDcJ1lRb3yalQNYiP8SZvvCySzoqJP
u0LXBN5D8980y3JBNjRjcWnA9FotNJx+FEQWZUMPz43UtpBroLoxslxHkg1F
Wjal7L5fA2WPb/F2yrMhVmcF09sZ1ZCqY9k3dZgNjQaIFXycrIKbMcyWfOfZ
UOcAxFyOfQMySlctbj1nQ449hHR3lVL4E/913ieXDR3hYytmjC2BV2uWod6F
bMhEMFdD608x6NQeqHZ/xYZ+GrlqRhQXgfVxVinnJjYUn+WgOHakEILcssgW
U2zobV8KVDTkgOEnvkSzWTZ0r/ptf55mDnCqhCuazrOhKcUCBcPSbHi66eF4
bIUNXcxxNArNeQElYdofdZhwSJbBJkg4Nwu+5Ayny0viENfZe8rySynwHH/8
oJwMDr0KUhL8TkyBy+71n6Xlcciu9uEA/dAzWFXPwUmo4pCVWtHuSw+fAnuz
t7eAPg4ZCV7t3uX+GHplZzn5DXHoUd9XBY6iR9j+fCaPYIJDEdqatVcWHoLE
SfSFywqHri+LunjcTYQDU1yGzBdxSCAu+7hWRBxsGQRNMl7Cobnzzgw0nVho
Lljz23bDoa/7amUzKdFg7jVeSvXC4rn4uv9haCRcYigQXA7CoUDm/Qf1l0JB
0VmkYiEUh37Fs1qpfbkPy21xZn8icGhSl0mduycE/ON8Q34m4FD7P7x/VEcQ
PBQ7+nciC4d2tpS5O+3xh8quX7facnBIM5C3qNzbD8b84pjKC3AoiE3svF3P
bRAfHhO4X45D9sXspxrLbsKR0HvP3d/gkK7518fBGj5wSU1G6fQ7HDqzoKef
3eYNRXFe+vKNOERx+2m0k88TenQEPhFbcIgjwN/rVao7rPyuPf2vHYe+EZID
iIpX4aARzr23F4dCpxLsUcolOLdRTH43gEOvx6JieO44w73sk8EvRnBIGK+Y
V3HzIrQyZDzxncSh9Yk33gy37OFXyVHJC9M4JFHoGWrDZQec9vNFxnM4NPPp
ZcnFURtQ5ojXUvuDQy892rdkx0/CyXcaTSJL2PMPfLAqIFiCr+u4KesaDnUc
csrv3zaFZ/xBw4tkLL8PA1YGDIyg7oPMxVEaDh1/dhp/nnwEJr26/jRt49De
kXgObz4EO8S9bxXtwKOc/BHHvYcOgky3AFMSGx5J4OMfJUqqgYl/XXQgBx6p
BF9hPd6sAO7yTgJu3Hi0/+oH1+5lSYgfwT23IuIRd9HpO9dTBKDiQYmitgAe
0VmKbmhdwMOwuvVbaWE8+vlFd630wZoudYqix70bj4Yfbi0tMnfriiZkdG1K
4hHnM1vlo4kpuggMTk/J4FFAs9zry7tndJ3/zn//KI9HwcEjxKsERghLib/2
Zh8eHWLcpLp85IVCY01yuioesQsoxt68Igbd5PGgcE08apU6SVJUk4XlnCBO
70N4pPAfU27DdWXgs5Z9clYXj56kvojnF9UELaZPEgb6eDR6utk+MUsb7Mq8
i/YZ4tGYbc7cky09uHuepEUywaPygnzPVQFDyOSsb2Q0w/IjKTA+nGoCH6qd
TH9b4tEBDZ1BFGMOs5fxwwOn8Ajn09r/yMcKlFqs/+TZ49Euc6mlV162YHGD
6pvgiEcbsQ3zQ+/Pgo9EJuMdFzx68RTOlho4QPXd37vM3PFIlNpI0brtBBMK
CVlaXnjkdW74olyUCzCMaSpK3MQjOQHj8t9VrmCoGay35o9Hgzq2sVPO18Bt
WrZr4h4esaZ9z+b94QHRiZ9s2u7j0Yf3lrYs9Z7weYF07Vk0Hu1TGDOTC7wB
F/JKk1AqHuXbpm8sZv0HrHorIoGZePT0hdiPbs87UDym/qIuG49UDw9/dzK/
C1Su6tJDxXgUEhLS9TntHjzyaW5Xr8fyJaN7UmHuPhzayWZ+owmPzD47FJ3c
+QC+5xkPlrdi+fGVKTqhHQb7xru/7+vBo8YLfwzLSyOgXW+UKjeJR1tixHju
tVjwGBcOcp3Go/RvDozmivHAf/M8W+4cHlmySx75byoeLub/IO5ZxqPjE/vy
btglAn3ngqIoEzs6H5Bzfe72Y1D+wuTAK8WOKr8fyWe7ngpDNw1mzOXYEZvd
dA2/Qxrc5Q6/GqvIjgiBGzSyVTp06nPd5tBgR+80rpwR2pMJzgUCCSyG7KjW
QmlFS+k5PPVV/EBxZUcVQruO3UjNBV2e68YHrrGj/Y+78odU82CmoLzH15Md
OTjvjxL6mAeqE5pfVm+zo6pncpJ6jAXQdURv/W8EO2ry3me9EfISGHhtZKde
sqNlYe/J/V5l4JXNTxopZUcrL3DT+1vKYEprENf9mh0dDhXmpguWQ/N56/l3
NexI8IlDLLmlHCKKrIoTPmLfzzg35yX7GghG5mp6v9lR0kq3pixPJUgFGkGm
PAc6mhrqwOJbC48JOOWkfRxInbxoOjZVC6y5beLRqhzolVXfvesWdTDXZch0
+xAHKpfx4xpVqodiIYMWcxMOJO018TF1uQE0K/WOb7txoDvpL4L1uxvB+O+h
0+cLOND+P1eZrOpbQPfakyMFxRxI8viJpQmWVlD9vbp/rZwDNVMIvP0nWkHo
VxEuspoDne+2y1j+2gp/psWq33zkQKt1qo3MrO0Q/4VJlGsBi5fJda+yaycM
feycqlHlRGFtzpaKN3rAudDOQ7CWExVIpHVdMRuEyhu/TCzecyLH3zeWFvwH
AadzWzasmRNZaOwpTH45CEU9jyfXujjRMirivogfgrW1XqveCU50oSRioap1
CELgmFbYNic6gOv7aGE0As8H1BjW9blQsvDfY6Uu4/B9izOxt4MLBcc7Rl7f
mgTW1n/WF1t2IsuWg3qCqT9h233vtuoQN1KfVpCaJC6CRbOx1PUrPOhUMhuE
LK5ARd2698VrPKjCPIvzPH0FSG+zGk958CBvifsK6vhVmCygnNf25kHdjdaK
/ZKr4BlXkIz340Hm/B4zn0+tQrwdnjs7ggdxchzN+FG9Cr1L7ZSRfB5Unm5w
f/LeGliKGvXo/+RB0zxJ9c2UdfCNbkq58IsHDTAMWHKxbkAqTftywG8eJHWn
h2qKnb/nRlUYqxd5UNUOxdPl8hsQkCSsprLJgxyHf9dwnsXO69yLSbvxvEiB
3HOFqXoDWJmSztPleRHfyqBWjCcZFL14FISUeFGWXlh1+h0yWE1GkrX286Js
rpyynAdkSKsPjL+hxovuBn9qeZhKBvU7bk3zh3mRIGLUWWwjg+OatsyoKS9S
8hbufSqyCbWzP/6+8eBFdv786c51m9DWn3q91JMX6eX8NLrcugn99aeW8715
0fsJh2DHnk2YS2pbS/HlRaWXzQPUv28C37GXtKAAXoSEPuSdZabAtTxvvFks
L6pSemOeZ0QBkcuM0rPFvGgQb/2Q2k4BWevq3G+lvKi3PHM+o5cCquiG3Gg5
L6oO5f10cASbt0gzCl1veNHp8Db+4z8p4NPervqqjhepOPX+mmKmQpdcPAr4
xIt82HrOftehwp1fYud2/eVFvi+/1/3KpYLR8dyzhxZ5UYH29nZSMRX4ipXO
nl/mRQ/3nOnWqKBCiae2Xe46L7oW7r98rJGKzRdnbDW3eJFpiW5Q3RgVDFgf
W9twE1DVGf87P9lpQLgsYu3HS0ByTn0ChTw0+Nrx4mQ6kYBaPv/ott9Fg9sx
r6xmBQjIGlRuPJWgQSFfr4WvOAHRHBu+n8HmZu49HCeSVAiorPMlhe0CDb7c
TzStViMgsf4np0edaZA/K2j6VYOAxnb0XU9xo4F+odxxmUMENNLn8W7ZmwY+
KobGlfoEJE3Fi87ex+buh5+Mxo4SkMLPpCrtCBpwrVsbbRkS0LWixumQGGwe
r3I6ZngcY5HL4z+wuXwUggyGThLQSpVI3S9sDs/NwhlQTxGQ8x9k21xAA+8d
8UfFbAlIf1/D+Ths3udsSz9y6RwB2RzxS92owOZ1s1q9DWcCMtib54L/QIMX
58g6u3wJyGwkq0H7Cw2sD9et8N8moNtb3zZ+f6UBq1BIHr8fAbUlKTvFfKfB
leGdvPwBBKRq9qg3d5YGqlYy08QHBJT76UCV2hINppX/PCWGE5C80F1LnxUa
JHG/OkGMJKB2bUvOvDUaULt03hJiCSgsamFiapMGTcdORfImEdC3yj+Vrxno
4CMjDLxPCShUWVcylIkOMizfV3meERCvGzHDiJkOkU3X7HnSCeiz5PHWHDY6
aGepEngyCYjPz9Id8HRYCNxs5X5OQEWwZ/dHdjpY6dxX5s4loA4Ce1oVFx2Y
RUxmduYTUF+A6iUhbjpUUrmf7SzE8i94Qt2Dhw5CVSk7dpZg+ZQTHPtNoENX
kmMVVxkBMb4+UcrPR4eAm7LuXK8IaCrZ774KPx2mVF8PcVZi6/e2lwcBOjzi
/S+Ks4qAtM+wUpRJdDBc0kWc1QQUFRbzgU+QDpvdzOsctQTE7ssdMY9xYXFn
AUc9AQmkVxq9Evr/fVj8eY73WLx+NYzXhOmw86oNkaOJgN5GOL8WEKHDe2OR
dvZmAqo5zmr/BmNvuSl/9lYCijHYsXVUlA5SbPkq7O0EdIOh6/H/7/+GZtxn
8Z0EVMv+bc8hMTqEN6ul4LsIyHKzPS8D40MvKOb47v/7QUqCjPGfoAZmfC8B
pf5OjkO76ZB+IfQdrp+Aeg5MrtzB2AKOe+AGCGh1s8akAGNGMd49uCECCvm+
ndSO8Sv60DDbCAF5lEYPj/7//nI8NZptDMuHrCXn/+9Dd1Vf1GP7QkCC/CYa
/Ri3P5XbYP1KQOOmwVbvMPa7tVDIOon5rYDgnIixok2FA+sUAXlxS16x//99
rLofH+s0AaW5zjgLYRxPRB0sswS0IzvDugOLX3+FJYBlDtNDXdbBKxiv9X5U
ZZknoIFyE75//78PLU34yfwHizeMbSYIY9vY06nMCwQkY3yyaBPLJ7u7qCXz
EgGR2N5eccS49vgPFuYVzA9DHeK1WD3E8dev79ggIFtChu8xrF6MXGYiFDLW
P1yoJv5YPad4lDoWKAT0Jksv5wVW/xek35Jj/whI+f3kQscuOtwX6ezp2cb8
eH37WzumH2fxAv8WRiIKTH9iV43pS0bOdaiMhYjumFgs+WD6Y1M0DMllIyIG
WjqXLi8d5vZLK6fisUXHf6iiYPot0PoREcZFRKbjt+uMMH0rHnPQOc9PRCa2
PTkGmD+4juvOnxQgom6tEpsXLJg/zESfGAsSkRApLHN1Bx1KbcaX1EWJSDq9
mOUa5j/VS6ezOaSJaMeGqWEt5k/CFU1LRlkiur8ivliyQYNVd/6tDTkiCr5r
Ao8wP1fc/Hx6SpGIlFsaJjQx/2uFmnO8Uyeis7fmzb5g/YEUsa+qRJOIUoPb
3Z2nabAZzeWSfYCINAujDL5h/aT60cf6OG0iYs2+s7cY6z/a2ce8Lx0lIs/r
P/CFfTQQzZfZfc6QiJ5pe2u2d9Ng6yVLl6URFv/dHOXRjzRoeP1BWseUiO7J
miR/bsH67QcYJVoTkavogxj5dzTY0yb2AG9DROE1o7e/vaEB88d/qtuniejq
So1x2CsatPTXRM+fJSLvWp6C0pc0MJrSQo1ORFT+lVrtlEYDM0blPI8bRMS5
MqZ9LoAGS34TfbE3iUj32NeAn//R4OFaJL3kFhH9Nz+Z7HSTBiM/ZywX7xAR
UM9e33eNBo7dKfTr97H8nlBU4D6D9f8UNiuvx0R0XYhQyahMg138b/wTnhDR
5yPmvGnyNHgXezGvPBlbT7NIxl5pbL1BdfTlNIzzhK7uEqJB2OUbed65RHTs
iNRN2EGDZxrf6DfeEtHIwjTHYD8VtEujZR+9I6Kd1WefPOiiwje5Q1YVNURk
MFHYsLeVClIij/PWGogoV+L5DoN3VChmOm51s52IWqf2yfSmU+F9T2We7ygR
reqe8QFXKsy4xVr9RyOizT0LV6r/YueBC36qN/9h9bxc739glgJrNpcIXtvY
ej3m5gq/UoD5qG7/5R18SNSGe+FaDwUkxRYsbTn4UIRtbMClMgpc6D9hqSXM
hxwYUnw0PSkwdojLYv0QHyLn7P8W9HMTejmiT3j58aF7LBzqLyvJIHjb8OUT
fz6UNLSlk/eSDBenGfD1AXxoLr5D6WkmGdZrbzazh2DP8+dasY0kg5CHw+Hs
KD50SuOw72l7Mrj0qu4dTuVD6z15EycZyUB9NMqs08CHOo3q5fP1NkBaTLYW
x8yP1psPKg7kroG8P4eKWBQ/EnpxeLfg/mW4T4xbF8fvQjf0uhuzA3/DMeEy
pQ8Ju1BhbJCTpPA0nD/n+caKVwBdLPT5r9dtHBKC838bEgVQkdY/o9JD49Cc
PylxmF8AHfO+/LGAYxzk1y1i9wgKIM4Eq9SV4jEgx6i4rokLoPUXURYjq6MQ
37BCSlIWQJpSRe+EQkegSfKm/6i5APJl/nj7Zf0grBsVv/pkKYCUQ3kDTz0c
BLnrM3ONJwXQp0+v0sQvD0JszalThacFkO3j8XYhwiCctdbcd8dBAH35m235
wnUA1kLJ30SuC6ArNp+S5QQ/g8yv/45ciBVAUZ2ej0lPekE49B45IF4AqX0P
Wp+91gs8EmEv0xIFUJJjE3FKvxcoto+I40kCSOnF79j6rz3Q1V7y41SGAGIU
ELZaf9QN3vk/Qo6XCaCjPrH7awhdUO96olmzXwDFdB36scumDV7vsL59akAA
vVxN00/kaoP8DDtFnyEB9PiWt7h3SyskDLs+Kh8TQI8MJVMuaLaC87FgZ8Uf
AqjXKucEo2gLsMu+ZZZcE0ANjixaSf+a4PSsuAHXLhKCkDNGGiL1oLrtUsJG
IqGLMuLHzxfXASfppQCTEAndv9nkaAh12P6pMb8hSkLmESW3T7nUglyxcdyk
NAkFtGfN+lVXw+YN79HXGiS0xpEqqRPxFvqj3+qXaJFQa3uXfrjMWyjKob/M
P0hC1Leuo0+bK+HC8IOANB0SWn5vM8exoxI6DqXsCTMgoaQ13MiRiAp4xtjs
bneKhA6kwJBJTTn4COGHrU9j8cRrpZJcysFMzQyZnyEhFwkOv3LucmByGSEc
tSehM7WlnQauZXC1/c9bJRcSunUo0HkHKgHtOH4mxpsk9NwrSEvAswB25dtd
pfmS0GxtYN6FiXxYep8xsH6bhL54jdGNTfMhe2Vv3rw/9rxL3TFb+/KA00bX
dOA+Cfn+eHRliy0HJkRck/IekdAWQ83XLlwW2Ehrz3xJIiEhl/9MrwVnQq8S
rzohmYSOX5yyPUDPgCbdmj7/NBJiLfeJciCnQf4Fbi6rXBL65H2+1WP3M5Bw
mz4blk9C7cUpq0NqyfDM611hbSEWL70w2s30KcQEOxnJlpLQu8NFLoTIJPDO
fhtCf0tCbwQPmsVrPYTfRdH9KtUk5PMu8qmbeyI4v3GUcK0lIYYVQsLNvAQ4
3crR0PeehAirC6Z75eJBe86BmttBQvoHiveoVkVC5ZK68ZePWDxnrWX1XSNg
PwX/lLebhKoT1O62iIWDJHuFhn8/Fo+pwGnFvFBsf8V5WY6T0NVQOdZs0SC4
pz7R8GCChPLkbWRu89wDqvarnbXfSKiJPW7jsUAA/DlxrkhmGls/0ffCDy0/
uGSjQjs7i+V72X00zvE2fDvPapIwR0JaT7qVjqT6Qv/1sp+0PyQkbum10Xr0
Bhy/HaqpskhC857Jd1NeeUHzPbvQS8sktHJjmSVQxRPeJjDv6VsnoQtuzyrX
mq+A8rNRL9ZNEnqAr9irsPcyFD4veX+Yiv3eOWPLmFIXSH1tez53i4SM9i3k
TEo6An+tUvE4gyASe5pZV7L7PMQ2M9F5dgii7oPJbXhdO8B9GjYxZBFEi2cF
pYczbSBosCj5DpsgKhPfoStsdBKoE0FzZXhBdNW4SWZMzQJ8Zm20ZjkEUVZo
LNrfbgJ/FxQeCO8URBF7WZRLyg3gEplh0IJHEBHtGs21pPRgcntwzwOCIJK+
TjqTCYfgDO6ldw2fIJrvVralGalBP8+9xqVdgoj36JIaT4c8mAqe4pERFEQ6
EyXPUqQkoEVC3uGssCDq/Vxy3NiYCLry28XxooLo1/v1n31SjFClOkBv2S2I
QoL3LQlKf9dVOVxwnCYhiGyuVL7+//9B/wfFmbAN
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
8Yc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {0., 1.7577792338245601`}}, {{0, 6.283185307179586}, {
     0., 1.7577792338245601`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.796487618167838*^9, 3.804432369048946*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"evParam", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"E1", "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "p", "]"}]}]}], ",", 
      RowBox[{"E0", "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"Log", "[", 
         RowBox[{"1", "-", "p"}], "]"}]}]}]}], "}"}], "/.", 
    RowBox[{"p", "\[Rule]", "0.1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"compareDiag", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"V\[Rho]\[Sigma]", "/.", "evParam"}], ",", 
      RowBox[{"V\[Rho]D\[Sigma]", "/.", "evParam"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.79648797028769*^9, 3.796487971837512*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
XYDKd1P7yA0i2uVImhQ96Qqjb/NaPZz+v974K0rLDeR/KvYv3CIi+dZ9sonW
HtDjcdtK3oeInrmdvfnGzxN8+crHnfyJiIsJWtnSb0HTCdWlqRDM37t/CvO2
3gGXn/fuyEQQUQUXrdD9sjcIen5huh5DRIOvXlTezfMB2wwdnvEnROQ0Ypgr
peIHOJLx3uF3RLSjN2ZgRu8eOKds2daTQ0TtYdt5xiiBMKzUiW/JJ6L5d3I3
ng0GQs1lo8kPZUSUwN/blhdyH0IyDbOiG4nIvLBj/tKeUFgH8vMHrUQkMpbo
qSD8EG58/xbh852IhpkpzM8EMV5d13ey/0FEHTt0VKMlI4B88oyC6l8isnQJ
pG3qRsO9HzziSjNEpHDN1GD/SDQsOrZQZBeI6HwImwC/bwx0xZ1e3kYjIgFF
HRuFykfw9LfOh1kiJ9IjAMdp53jg8uTMGOPhRHah8flv9j6Gu8TGJ/1kTpQR
yUPcNfwYLOROedcJcaJ6s0fORdaJIO57EpKlOFGsZJzwjyfPII6MPxi/nxPl
Ru9kq3NNAvbUrzvD5DnRtriCUXWD5zDepMl8S5kTeTqV3iFzJ0OWkEbtmVOc
aJFOW/Wefwki2axFGnqcaKdP2Z4551cQpVqTesyQEx2UpFv+XngFLnYngvea
ciL196K1ZozXoFikqsOw50Qewr0HLh1OhTRtpuNLDpxopCJt7k59Kmz7WSnz
15kT6fP4pp22SAMaC+Lpvs2JnJt9xnbHp0OlAfVbdggnaqx1qz2z+x1oTymb
XH7LiVjdmvNjbXKBeuPxibdZnMiN80zRdHMuyP9dOLCYx4leBTndFTyaB0IT
mfjQUk5kVlR2cZbyHv6NiJQWNnIiSbzVBeLvfBi0vpOKa8OufwppMbhYAJ3D
3TE6HZxIqyR614POAvg4GHV9qJ8TRQzNQn1rIUT1M+/gnuZExpK2p4j9xRB4
0Zxwfp4T/XgS0y9qUwK3+8qWXi1zIvdqHRbqdAlY9bi1HGFwohcjzcnJ+FJQ
6BjzteHjQlNXZN8YGZdDV2PDcJk8F7qkkJ2/+a4SGk7tbWVX4kKJzBnJm7gq
+FR/r8zgGBcaqdfTETSpgvSvx2P/nOBC7SMo4TV7NXh9ztbgP8eFZsV466Vd
P8OOspj0a55ciMrDd3gu4AuQlWdiC+9wIWt7yqDw5Bdg/6Djj/PjQr2Bubyu
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
fechAcN7bXLW9RHUmUs+fbeAwPGDqrOHB+h+nh3OnbBjQpctv2HsIMH9eSe8
hBxEwcq5/XrlEEGHh75+naeEgOuR93l2mGDV4kaHB09WgNGfIZqqo3T8uJn4
sFB+KA+wDjn+g6DmXDmzr30hcK5sakz+SeffOhrluo/HKYhdLFc/TlAf4ny4
5dOczTfaPPmnCDbuS1rR+PsXJ+te7hudGZrfz2VDOl++c+Syg4Q85wj2jWF6
ypchzs0nVrZp8zQ/yn9J3Jbq5zBfqTxo52OjR+/Whn6zbk5U+cI54UVsvPgq
JvVVWStnWW2L4e4lbLRQLc1558LlXGrKSfJdysb8hXGo/vo9Z6bj0mDecjY2
BBcYh/WUcrwGDmoNrGRjdpdivkr1C87Itw2h4oJsdOe5bLs1nMc5PsnXZCbM
Rrcax64Jmfucbl6TXKgoG5Oiu6zKK69zDi3LPvOSwUYHvZKHacXhHK5wQMl3
FhujDoUb9NT4cIzZFsLr2GwMzi4d+SZ7jFMho2R3WJyN8UsW6l58Y8jhKPEe
xEiyMdGsvcdLTp7zXK1xrmING+1u8YWuW9u/TVUn02hWho3////uf1LwUrQ=

      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, 2 Pi}, {0., 2.0583865911710464`}}, {{0, 6.283185307179586}, {
     0., 2.0583865911710464`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7964879722502327`*^9, 3.80443241845753*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Implementation", "Subsection",
 CellChangeTimes->{{3.796475945601901*^9, 3.7964759462868347`*^9}, {
  3.804432589708456*^9, 3.804432591725315*^9}},
 ExpressionUUID -> "ec68182e-c039-414a-87cf-9c46d193470d"],

Cell["\<\
This section contains the functions that implement the measurement protocols. \
It should be executed before the next section \[OpenCurlyDoubleQuote]Results\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.804432465254835*^9, 3.804432513539661*^9}, {
  3.8044488524762383`*^9, 3.804448856425061*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"$FrontEndSession", ",", 
    RowBox[{"EvaluationCompletionAction", "\[Rule]", "\"\<ShowTiming\>\""}]}],
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     StyleBox["We", "Input"], 
     StyleBox[" ", "Input"], 
     StyleBox["set", "Input"], 
     StyleBox[" ", "Input"], 
     SuperscriptBox[
      StyleBox["0", "Input"], "0"]}], "=", 
    RowBox[{
     RowBox[{
     "1", " ", "to", " ", "obtain", " ", "a", " ", "consistent", " ", "dot", 
      " ", "product", " ", "for", " ", "\[Theta]"}], "=", 
     FractionBox["\[Pi]", "2"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "[", "Power", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"0", "|", "0."}], ",", 
     RowBox[{"0", "|", "0."}]}], "]"}], "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", "Power", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "global", " ", "variables", " ", 
     RowBox[{"are", ":", " ", "NN"}]}], ",", " ", "\[Sigma]EV", ",", " ", 
    "\[Rho]EV", ",", " ", "\[Xi]Hat", ",", " ", "naccOpt", ",", " ", 
    "naccSimp", ",", " ", "basis", ",", " ", "zeroVec", ",", " ", 
    RowBox[{
     RowBox[{"\[Theta]global", ".", "\[IndentingNewLine]", "The"}], " ", 
     "values", " ", "for", " ", "the", " ", "relative", " ", "entropy", " ", 
     "and", " ", "the", " ", "relative", " ", "entropy", " ", "variance", " ",
      "used", " ", "here", " ", "are", " ", "computed", " ", 
     RowBox[{"above", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Init", "[", 
     RowBox[{"p_", ",", "\[Theta]_", ",", "\[Epsilon]_", ",", 
      RowBox[{"Eoptval_", ":", 
       RowBox[{"-", "\[Infinity]"}]}], ",", 
      RowBox[{"precomp_", ":", "True"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Sigma]", ",", "\[Rho]", ",", "E1", ",", "E0", ",", 
        "S\[Rho]\[Sigma]", ",", "V\[Rho]\[Sigma]", ",", "S\[Rho]D\[Sigma]", 
        ",", "V\[Rho]D\[Sigma]", ",", 
        RowBox[{"Eopt", "=", "Eoptval"}], ",", "Esimp"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"E1", ",", "E0"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Log", "[", "p", "]"}]}], ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", "p"}], "]"}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<N=\>\"", ",", " ", "NN", ",", " ", "\"\< | p=\>\"", ",", "p", 
         ",", "\"\< | \[Theta]=\>\"", ",", " ", "\[Theta]", ",", 
         "\"\< | \[Epsilon]=\>\"", ",", "\[Epsilon]", ",", 
         "\"\< | \!\(\*SubscriptBox[\(E\), \(1\)]\)=\>\"", ",", "E1", ",", 
         "\"\< | \!\(\*SubscriptBox[\(E\), \(0\)]\)=\>\"", ",", "E0"}], "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\[Sigma]", "=", 
        RowBox[{
         RowBox[{"(", GridBox[{
            {
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "E0"}]], "0"},
            {"0", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"-", "E1"}]]}
           }], ")"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Rho]", "=", 
        RowBox[{
         TagBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E0"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E1"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", "E0"}]]}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", "E1"}]]}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
             {
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", "E0"}]]}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"-", "E1"}]]}], ")"}], " ", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E1"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E0"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]], "//", "N"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Theta]global", "=", "\[Theta]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"basis", "=", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "NN"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"zeroVec", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          SuperscriptBox["2", "NN"]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"S\[Rho]\[Sigma]", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "p"}]}], ")"}]}], " ", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox["1", "p"]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V\[Rho]\[Sigma]", "=", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", "p"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["p", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", "p"}]}], ")"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            FractionBox["1", "p"]}], "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"S\[Rho]D\[Sigma]", "=", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", "p"}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "p"}]}], ")"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "p"}]}], ")"}], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], 
             "]"}]}], "-", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2", " ", "p"}]}], ")"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}]], "]"}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"V\[Rho]D\[Sigma]", "=", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "p"}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p"}], ")"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "p"}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "]"}], "2"]}], 
           "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "p"}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"2", " ", "p"}], 
               RowBox[{"1", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "p"}]}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}]], "]"}], "2"]}], 
           "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", "p"}]}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "p"}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
                 RowBox[{"p", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "p"}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]], 
                "]"}]}], "+", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "p"}]}], ")"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Theta]"}], "]"}], "2"]}]}], 
                RowBox[{"4", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}]], 
               "]"}]}], ")"}], "2"]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Eopt", "\[Equal]", 
          RowBox[{"-", "\[Infinity]"}]}], ",", 
         RowBox[{"Eopt", "=", 
          RowBox[{"S\[Rho]\[Sigma]", "+", 
           RowBox[{
            SqrtBox[
             FractionBox["V\[Rho]\[Sigma]", "NN"]], 
            RowBox[{"inv\[CapitalPhi]", "[", "\[Epsilon]", "]"}]}]}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Esimp", "=", 
        RowBox[{"S\[Rho]D\[Sigma]", "+", 
         RowBox[{
          SqrtBox[
           FractionBox["V\[Rho]D\[Sigma]", "NN"]], 
          RowBox[{"inv\[CapitalPhi]", "[", "\[Epsilon]", "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"naccOpt", "=", 
        RowBox[{"NN", 
         FractionBox["Eopt", 
          RowBox[{"E1", "-", "E0"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"naccSimp", "=", 
        RowBox[{"NN", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Esimp", "-", "E0", "-", 
             RowBox[{"Log", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E0"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E1"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], 
            ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"E1", "-", "E0", "+", 
             RowBox[{"Log", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E1"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E0"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}], "-", 
             
             RowBox[{"Log", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E0"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", "E1"}]], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "]"}]}], 
            ")"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<S(\[Rho]||\[Sigma])=\>\"", ",", "S\[Rho]\[Sigma]", ",", 
         "\"\< | V(\[Rho]||\[Sigma])=\>\"", ",", "V\[Rho]\[Sigma]", ",", 
         "\"\< || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=\>\"", 
         ",", "S\[Rho]D\[Sigma]", ",", 
         "\"\< | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=\>\"", 
         ",", "V\[Rho]D\[Sigma]", ",", "\"\<\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"precomp", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Precomputation for \[Sigma] (\>\"", ",", 
           RowBox[{
            RowBox[{"AbsoluteTiming", "[", 
             RowBox[{
              RowBox[{"\[Sigma]EV", "=", 
               RowBox[{"PrecomputeEV", "[", "\[Sigma]", "]"}]}], ";"}], "]"}],
             "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<)\>\""}], "]"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"precomp", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Precomputation for \[Rho] (\>\"", ",", 
           RowBox[{
            RowBox[{"AbsoluteTiming", "[", 
             RowBox[{
              RowBox[{"\[Rho]EV", "=", 
               RowBox[{"PrecomputeEV", "[", "\[Rho]", "]"}]}], ";"}], "]"}], 
            "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<)\\n\>\""}], 
          "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"inv\[CapitalPhi]", "[", "\[Epsilon]_", "]"}], "=", 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"InverseErf", "[", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "\[Epsilon]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"n1C", "[", "Evec_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "NN"], 
         RowBox[{"Evec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"n10C", "[", 
     RowBox[{"E1vec_", ",", "E2vec_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "NN"], 
         RowBox[{
          RowBox[{"E1vec", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"E2vec", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DotEEt", "[", 
     RowBox[{"Evec_", ",", "Etvec_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n10Cev", ",", "n01Cev"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n10Cev", "=", 
        RowBox[{"n10C", "[", 
         RowBox[{"Etvec", ",", "Evec"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"n01Cev", "=", 
        RowBox[{"n10C", "[", 
         RowBox[{"Evec", ",", "Etvec"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "n10Cev"], 
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]global", "]"}], 
          RowBox[{"NN", "-", "n01Cev", "-", "n10Cev"}]], 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]global", "]"}], 
          RowBox[{"n01Cev", "+", "n10Cev"}]]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Xi]vec", "[", "Etvec_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nstar", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nstar", "=", 
        RowBox[{
         RowBox[{"n1C", "[", "Etvec", "]"}], "+", " ", "naccOpt"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"res", "=", "zeroVec"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"n1C", "[", 
              RowBox[{"basis", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
             "nstar"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{"DotEEt", "[", 
               RowBox[{
                RowBox[{"basis", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "Etvec"}], "]"}]}], " ",
              ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "basis", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Compute\[Xi]Hat", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"list\[Xi]", ",", "dimSimp", ",", "dimOpt"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Generating list of \[Xi] (\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AbsoluteTiming", "[", 
           RowBox[{"list\[Xi]", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"\[Xi]vec", "[", 
               RowBox[{"basis", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", "basis", "]"}]}], "}"}]}], "]"}]}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<)\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Applying Gram-Schmidt (\>\"", ",", " ", 
         RowBox[{
          RowBox[{"AbsoluteTiming", "[", 
           RowBox[{"\[Xi]Hat", "=", " ", 
            RowBox[{"Orthogonalize", "[", 
             RowBox[{"N", "[", "list\[Xi]", "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<)\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dimSimp", "=", 
        RowBox[{"dimHsimp", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dimOpt", "=", 
        RowBox[{"dimHopt", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<dim(H)=\>\"", ",", 
         SuperscriptBox["2", "NN"]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(n\), \(*\)]\)=\>\"", ",", "naccSimp"}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=\>\"", ",", 
         "dimSimp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=\>\"", ",", "dimOpt", 
         ",", "\"\<\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"dimSimp", ",", "dimOpt"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dimHsimp", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n1C", "[", 
             RowBox[{"basis", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
            "naccSimp"}], ",", "\[IndentingNewLine]", 
           RowBox[{"res", "++"}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           SuperscriptBox["2", "NN"]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dimHopt", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "iNull", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"iNull", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Xi]Hat", "[", 
           RowBox[{"[", 
            RowBox[{"-", "iNull"}], "]"}], "]"}], "\[Equal]", "zeroVec"}], 
         ",", " ", 
         RowBox[{"iNull", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{
         SuperscriptBox["2", "NN"], "+", "1", "-", "iNull"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PrecomputeEV", "[", "\[Rho]_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "=", 
        RowBox[{"TensorProduct", "[", 
         RowBox[{"zeroVec", ",", "zeroVec"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
           RowBox[{
            SubsuperscriptBox["\[Product]", 
             RowBox[{"k", "=", "1"}], "NN"], 
            RowBox[{"\[Rho]", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"basis", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "k"}], "]"}], "]"}], "+", "1"}], ",", 
               RowBox[{
                RowBox[{"basis", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "k"}], "]"}], "]"}], "+", "1"}]}], "]"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", ">", "i"}], ",", 
            RowBox[{
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           SuperscriptBox["2", "NN"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "i", ",", 
           SuperscriptBox["2", "NN"]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OptimalMes", "[", "\[Rho]EV_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Return", "[", 
        RowBox[{"Tr", "[", 
         RowBox[{"\[Xi]Hat", ".", "\[Rho]EV", ".", 
          RowBox[{"Transpose", "[", "\[Xi]Hat", "]"}]}], "]"}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SimpMes", "[", "\[Rho]EV_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"res", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n1C", "[", 
             RowBox[{"basis", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
            "naccSimp"}], ",", "\[IndentingNewLine]", 
           RowBox[{"res", "+=", 
            RowBox[{"\[Rho]EV", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "i"}], "]"}], "]"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           SuperscriptBox["2", "NN"]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Optimal\[Beta]\[Alpha]", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Beta]opt", ",", "\[Alpha]opt", ",", "\[Beta]t", ",", "\[Alpha]t"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Beta]t", "=", 
        RowBox[{
         RowBox[{"Timing", "[", 
          RowBox[{"\[Beta]opt", "=", 
           RowBox[{"OptimalMes", "[", "\[Sigma]EV", "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=\>\"", ",", 
         "\[Beta]opt", ",", "\"\< (\>\"", ",", "\[Beta]t", ",", "\"\<)\>\""}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]t", "=", 
        RowBox[{
         RowBox[{"Timing", "[", 
          RowBox[{"\[Alpha]opt", "=", 
           RowBox[{"1", "-", 
            RowBox[{"OptimalMes", "[", "\[Rho]EV", "]"}]}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=\>\"", ",", 
         "\[Alpha]opt", ",", "\"\< (\>\"", ",", "\[Alpha]t", ",", 
         "\"\<)\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"\[Beta]opt", ",", "\[Alpha]opt"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Simp\[Beta]\[Alpha]", "[", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Beta]simp", ",", "\[Alpha]simp", ",", "\[Beta]t", ",", "\[Alpha]t"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]t", "=", 
       RowBox[{
        RowBox[{"Timing", "[", 
         RowBox[{"\[Beta]simp", "=", 
          RowBox[{"SimpMes", "[", "\[Sigma]EV", "]"}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=\>\"", ",", 
        "\[Beta]simp", ",", "\"\< (\>\"", ",", "\[Beta]t", ",", "\"\<)\>\""}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]t", "=", 
       RowBox[{
        RowBox[{"Timing", "[", 
         RowBox[{"\[Alpha]simp", "=", 
          RowBox[{"1", "-", 
           RowBox[{"SimpMes", "[", "\[Rho]EV", "]"}]}]}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=\>\"", ",", 
        "\[Alpha]simp", ",", "\"\< (\>\"", ",", "\[Alpha]t", ",", 
        "\"\<)\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"\[Beta]simp", ",", "\[Alpha]simp"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7964736338722963`*^9, 3.796473686660325*^9}, {
   3.796473727352749*^9, 3.7964737542149343`*^9}, {3.796473870475956*^9, 
   3.796474034410118*^9}, {3.796474162135653*^9, 3.796474260256638*^9}, {
   3.796474309977172*^9, 3.796474494192047*^9}, {3.796474524219143*^9, 
   3.7964746033183613`*^9}, {3.7964746884704037`*^9, 3.796474704594181*^9}, {
   3.7964747640117693`*^9, 3.79647476411567*^9}, {3.796474823144477*^9, 
   3.7964748232342787`*^9}, {3.796474913762005*^9, 3.7964749350490522`*^9}, {
   3.7964753232810907`*^9, 3.796475352348723*^9}, {3.796475466146009*^9, 
   3.796475630329918*^9}, {3.7964756750708227`*^9, 3.7964756751260347`*^9}, {
   3.796475715684977*^9, 3.796475765217352*^9}, {3.7964758006363792`*^9, 
   3.7964758008237457`*^9}, {3.7964760837556667`*^9, 3.796476333483034*^9}, {
   3.796476367122558*^9, 3.7964764121550283`*^9}, {3.79647751302964*^9, 
   3.796477532295648*^9}, {3.796477596726563*^9, 3.7964776946138477`*^9}, {
   3.796480662249798*^9, 3.79648070226403*^9}, {3.796480759754739*^9, 
   3.796480820099407*^9}, {3.7964808964781523`*^9, 3.796480909784316*^9}, 
   3.7964809489021378`*^9, {3.796480984028404*^9, 3.796480999663877*^9}, {
   3.796481165084848*^9, 3.7964811766367273`*^9}, {3.796481220580371*^9, 
   3.796481229795651*^9}, {3.796481384971799*^9, 3.796481409839983*^9}, {
   3.796481442053205*^9, 3.796481471559383*^9}, {3.796481504637231*^9, 
   3.7964815047235317`*^9}, {3.7964815457789307`*^9, 3.796481546551651*^9}, {
   3.7964817177257233`*^9, 3.7964817508648443`*^9}, 3.796481844389572*^9, {
   3.796482015143218*^9, 3.796482016569758*^9}, {3.796482415277446*^9, 
   3.796482470614623*^9}, 3.7964825167667227`*^9, {3.796482869027749*^9, 
   3.796483077175417*^9}, {3.796483180825863*^9, 3.796483184154891*^9}, {
   3.796483230112481*^9, 3.79648323061487*^9}, {3.796483299411521*^9, 
   3.7964833192225018`*^9}, {3.7964833879714947`*^9, 
   3.7964834200886393`*^9}, {3.796483457038804*^9, 3.796483465381796*^9}, {
   3.79648351818391*^9, 3.796483535035019*^9}, {3.7964836018521957`*^9, 
   3.79648361607049*^9}, {3.796483648210638*^9, 3.7964836903162727`*^9}, {
   3.796483753207858*^9, 3.796483797721582*^9}, {3.7964838449296207`*^9, 
   3.7964838450173492`*^9}, {3.7964838979145927`*^9, 
   3.7964839388661346`*^9}, {3.796484009295442*^9, 3.796484035472926*^9}, 
   3.7964842484160137`*^9, {3.7964844299260893`*^9, 3.796484494396606*^9}, {
   3.796484651191628*^9, 3.796484662867422*^9}, {3.796484767911119*^9, 
   3.796484768055204*^9}, {3.796484931522184*^9, 3.796485019663932*^9}, {
   3.796485100051158*^9, 3.796485130758515*^9}, {3.796485259781052*^9, 
   3.796485313161367*^9}, {3.796485748101797*^9, 3.7964857482885036`*^9}, {
   3.796485847923992*^9, 3.796485848145019*^9}, {3.796487406279071*^9, 
   3.796487422975421*^9}, {3.79648826636056*^9, 3.796488758214324*^9}, {
   3.796488791733556*^9, 3.796488859721867*^9}, {3.7964889066083393`*^9, 
   3.796488966691568*^9}, {3.796489072184256*^9, 3.796489164007329*^9}, {
   3.796489196766305*^9, 3.796489270259338*^9}, {3.796489311023093*^9, 
   3.796489464951499*^9}, {3.7964895062597733`*^9, 3.796489589697514*^9}, {
   3.7964896609265347`*^9, 3.796489786406953*^9}, {3.796489824762456*^9, 
   3.7964899712891693`*^9}, {3.7964900413847733`*^9, 3.796490180487584*^9}, {
   3.7964902598686543`*^9, 3.79649031928898*^9}, {3.7964903514792337`*^9, 
   3.796490369694734*^9}, {3.796490416585511*^9, 3.796490456519259*^9}, 
   3.796490601176193*^9, {3.796490739034527*^9, 3.7964907413841057`*^9}, {
   3.796490873532515*^9, 3.7964910563124733`*^9}, {3.796491569180176*^9, 
   3.796491578750955*^9}, {3.7964920205788183`*^9, 3.7964920493928347`*^9}, {
   3.796492967916976*^9, 3.7964929792205353`*^9}, {3.7964947208692503`*^9, 
   3.796494726007515*^9}, {3.7964948588441477`*^9, 3.796494907943379*^9}, {
   3.796499157506794*^9, 3.796499187945311*^9}, {3.796499243883692*^9, 
   3.796499264716467*^9}, {3.796524283151072*^9, 3.796524373550764*^9}, {
   3.796524615199471*^9, 3.796524623258222*^9}, {3.796524690606984*^9, 
   3.796524690871797*^9}, {3.7965249272313967`*^9, 3.796524960210721*^9}, {
   3.796525089129059*^9, 3.796525169236512*^9}, {3.796525215256168*^9, 
   3.796525253336685*^9}, {3.796525314022071*^9, 3.79652531413986*^9}, 
   3.79652705414142*^9, {3.796613774773538*^9, 3.7966137872794933`*^9}, {
   3.796613982169593*^9, 3.796613998292745*^9}, {3.8025992399100046`*^9, 
   3.8025992450000973`*^9}, {3.8025994250092134`*^9, 
   3.8025994275295362`*^9}, {3.802600362222723*^9, 3.8026003746774054`*^9}, {
   3.8027048322791753`*^9, 3.802704854726985*^9}, {3.802704914342575*^9, 
   3.8027049159163837`*^9}, {3.802763049480847*^9, 3.802763052714173*^9}, {
   3.802763083006214*^9, 3.802763100546324*^9}, {3.802763387337599*^9, 
   3.8027634221180525`*^9}, {3.8027634807782288`*^9, 3.802763493418406*^9}, {
   3.802763526521967*^9, 3.802763669540044*^9}, {3.8027637785705805`*^9, 
   3.8027637822257795`*^9}, {3.804433950144636*^9, 3.8044340134401407`*^9}, {
   3.804631342161059*^9, 3.804631342802538*^9}},
 ExpressionUUID -> "968e4559-15b4-4a5d-95a8-6f62d46d3901"]
}, Closed]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.7965246421685867`*^9, 3.7965246505777693`*^9}, {
  3.804432541262271*^9, 3.804432567641386*^9}},
 ExpressionUUID -> "bfad0e4f-33b6-45b1-85ac-5bc139be396d"],

Cell[TextData[{
 "We now compare the optimal measurement with the likelihood ratio test. The \
above procedure implements these measurements. It computes the corresponding \
errors for n ranging from Nmin and Nmax. The results are printed and saved \
into \[OpenCurlyDoubleQuote]data\[CloseCurlyDoubleQuote], which is used to \
plot them. \n\nWe compute both types of errors: (\[Alpha]opt,\[Beta]opt) for \
the optimal measurement and (\[Alpha]simp,\[Beta]simp) for the likelihood \
ratio test. We also compare the dimensions dimOpt and dimpSimp of the \
respective acceptance subspaces. nacc_simp is the (not rounded) acceptance \
threshold ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "*"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for the likelihood ratio test.\n\nNote: the Gram-Schmidt algorithm is \
known to be unstable (due to small rounding errors) so the results below need \
to be taken cautiously."
}], "Text",
 CellChangeTimes->{{3.796501636764206*^9, 3.796501657654271*^9}, {
  3.796527155809498*^9, 3.796527177091774*^9}, {3.796538005989808*^9, 
  3.796538007574574*^9}, {3.804432571948864*^9, 3.80443258153694*^9}, {
  3.804433435955784*^9, 3.8044336707672462`*^9}, {3.8044337548135347`*^9, 
  3.804433786802978*^9}, {3.804448864691147*^9, 3.804448903687825*^9}},
 ExpressionUUID -> "8a8cbe3f-6a07-4aec-9aa3-6a9265bcc96a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nmin", "=", "6"}], ";", 
  RowBox[{"Nmax", "=", "13"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NN", "=", "k"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Parameters", ":", "p"}], ",", "\[Theta]", ",", "\[Epsilon]"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Init", "[", 
     RowBox[{"0.015", ",", 
      FractionBox["\[Pi]", "3"], ",", "0.2"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dimSimp", ",", "dimOpt"}], "}"}], "=", 
     RowBox[{"Compute\[Xi]Hat", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]simp", ",", "\[Alpha]simp"}], "}"}], "=", 
     RowBox[{"Simp\[Beta]\[Alpha]", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]opt", ",", "\[Alpha]opt"}], "}"}], "=", 
     RowBox[{"Optimal\[Beta]\[Alpha]", "[", "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"NN", ",", " ", 
        RowBox[{"{", 
         RowBox[{"dimSimp", ",", "dimOpt"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]simp", ",", "\[Alpha]simp"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]opt", ",", "\[Alpha]opt"}], "}"}]}], "}"}]}], "]"}], 
    ";"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "Nmin", ",", "Nmax"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.796492825157755*^9, 3.796492825304318*^9}, {
   3.796493173445733*^9, 3.796493210080515*^9}, {3.7964932422168922`*^9, 
   3.796493243415325*^9}, {3.7964933583399677`*^9, 3.796493358987049*^9}, {
   3.796494262617251*^9, 3.796494263371098*^9}, 3.7964991402586184`*^9, {
   3.796499204654429*^9, 3.796499217652199*^9}, {3.796499249957047*^9, 
   3.796499281733385*^9}, {3.796499359453678*^9, 3.796499389272581*^9}, {
   3.796499605449254*^9, 3.7964996056464033`*^9}, {3.79649967124955*^9, 
   3.796499671312853*^9}, {3.7964998929682283`*^9, 3.796499893042248*^9}, {
   3.796501034753663*^9, 3.79650106710271*^9}, {3.796501164107359*^9, 
   3.7965011644389763`*^9}, {3.7965014715714283`*^9, 3.796501514226426*^9}, {
   3.796522944913109*^9, 3.796522945002823*^9}, {3.7965231839616337`*^9, 
   3.796523184495822*^9}, {3.796524221718273*^9, 3.796524243523704*^9}, {
   3.796524379557583*^9, 3.7965245491920967`*^9}, {3.796524765030552*^9, 
   3.796524771662941*^9}, {3.79652586860963*^9, 3.796525921392153*^9}, {
   3.796533374527461*^9, 3.796533379131465*^9}, {3.796537980548891*^9, 
   3.796538010309101*^9}, {3.796538065418947*^9, 3.796538067787139*^9}, {
   3.796619135794024*^9, 3.796619187249158*^9}, {3.796619233129744*^9, 
   3.796619235489626*^9}, {3.796619501120201*^9, 3.796619502129155*^9}, {
   3.796628222739359*^9, 3.796628231794455*^9}, {3.7966284309245453`*^9, 
   3.796628431338173*^9}, {3.796628511635783*^9, 3.796628514015506*^9}, {
   3.802599516918475*^9, 3.8025995206687126`*^9}, {3.8025995850983915`*^9, 
   3.8025995855683317`*^9}, {3.8026011084881783`*^9, 3.802601109238475*^9}, {
   3.802601164458271*^9, 3.802601171327915*^9}, {3.802601219007745*^9, 
   3.802601236321913*^9}, {3.8026014576660957`*^9, 3.802601458515252*^9}, {
   3.802602443163828*^9, 3.80260244839375*^9}, {3.802605953934106*^9, 
   3.802605964184164*^9}, {3.8026069462719345`*^9, 3.8026069518091373`*^9}, {
   3.8026075037812634`*^9, 3.8026075043115835`*^9}, {3.80260885019077*^9, 
   3.80260885949592*^9}, {3.8026122530340643`*^9, 3.8026122534487987`*^9}, {
   3.8026798118166056`*^9, 3.802679812741168*^9}, {3.802701748513672*^9, 
   3.8027017500813627`*^9}, {3.8027017959355354`*^9, 3.802701799267654*^9}, {
   3.8027047992884817`*^9, 3.802704807427404*^9}, {3.8027486747499*^9, 
   3.802748675228591*^9}, {3.8027631111629715`*^9, 3.802763117095742*^9}, {
   3.804432893369092*^9, 3.8044329428117523`*^9}, {3.804433425941103*^9, 
   3.8044334321931343`*^9}, {3.804433674509457*^9, 3.804433679407187*^9}, 
   3.804433713618018*^9, {3.8046302804631643`*^9, 3.8046302805845337`*^9}, {
   3.804632726522575*^9, 3.804632726619863*^9}},
 ExpressionUUID -> "2c68282a-6523-46f3-bea9-f7e2deb69445"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 6, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632748779848*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632748791453*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "0.262511`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 0.262511, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327490313063`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "0.361888`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 0.361888, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749393976*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "0.037672`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 0.037672, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749446797*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", "0.00585`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 0.00585, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327494584703`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "64"}],
  SequenceForm["dim(H)=", 64],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749466914*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "3.553575921087976`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 3.553575921087976],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749477209*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "22"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 22],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463274948722*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "33", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 33, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327494962177`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "7.412639062499996`*^-7", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.000494`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 7.412639062499996*^-7, " (",
    0.000494, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327495036907`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.18147440442722362`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.000559`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.18147440442722362`, " (",
    0.000559, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749510376*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "5.361693749999998`*^-8", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.000226`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 5.361693749999998*^-8, " (", 
   0.000226, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749517116*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.21189986584234477`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.000075`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.21189986584234477`, " (", 
   0.000075, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749523981*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 7, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327495322037`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327495397043`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "0.195097`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 0.195097, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327496644793`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "0.178346`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 0.178346, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327498464117`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "0.14438`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 0.14438, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327499638042`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", "0.001335`",
    "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 0.001335, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327499752913`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "128"}],
  SequenceForm["dim(H)=", 128],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749986403*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "4.223850714211672`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 4.223850714211672],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632749998481*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "29"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 29],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632750010542*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "65", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 65, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632750022171*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "1.5550766015624995`*^-8", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.001176`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 1.5550766015624995`*^-8, 
   " (", 0.001176, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632750033935*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.2593154733607206`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.001016`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.2593154733607206, " (", 
   0.001016, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327500454273`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "8.154738281249995`*^-10", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.001357`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 8.154738281249995*^-10, " (",
    0.001357, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632750057115*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.2931124707663477`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.001256`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.2931124707663477, " (", 
   0.001256, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632750068844*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "8", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 8, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327500807133`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327500950117`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "0.772142`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 0.772142, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463275074592*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "0.72007`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 0.72007, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632751464629*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "0.615211`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 0.615211, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632752070397*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", "0.008235`",
    "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 0.008235, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632752080243*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "256"}],
  SequenceForm["dim(H)=", 256],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632752091127*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "4.899125130772266`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 4.899125130772266],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463275210074*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "93"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 93],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327521096497`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "129", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 129, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632752119257*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "4.095072592382807`*^-8", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.002537`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 4.095072592382807*^-8, " (",
    0.002537, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327521286583`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.12445582143343625`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.002493`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.12445582143343625`, " (",
    0.002493, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327521379623`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "3.7562535632812477`*^-10", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.006901`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 3.7562535632812477`*^-10, 
   " (", 0.006901, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463275214709*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.5984325106633319`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.00771`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.5984325106633319, " (", 
   0.00771, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327521568737`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "9", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 9, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327521660633`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327521756973`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "3.092118`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 3.092118, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632755189687*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "3.186033`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 3.186033, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632758377005*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "2.559436`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 2.559436, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632760934464*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", "0.048352`",
    "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 0.048352, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632760982359*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "512"}],
  SequenceForm["dim(H)=", 512],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632760993438*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "5.578485482403612`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 5.578485482403612],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327610100527`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "130"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 130],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632761024103*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "258", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 258, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632761035507*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "9.203891084999996`*^-10", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.005043`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 9.203891084999996*^-10, 
   " (", 0.005043, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327610508823`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.18001799802747775`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.004805`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.18001799802747775`, " (",
    0.004805, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632761062899*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "1.240040390624999`*^-11", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.038384`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 1.240040390624999*^-11, " (",
    0.038384, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632761073802*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.2167233225154257`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.041488`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.2167233225154257, " (", 
   0.041488, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327610835257`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 10, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327610940123`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632761103321*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "13.214598`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 13.214598, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632774237623*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "12.85785`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 12.85785, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632787095663*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "10.186653`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 10.186653, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797283009*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", "0.38911`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 0.38911, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327976720963`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "1024"}],
  SequenceForm["dim(H)=", 1024],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797701407*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "6.2612665181677905`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 6.2612665181677905`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797710164*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "176"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 176],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327977189093`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "514", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 514, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797728755*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "1.9706530155117195`*^-11", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.010228`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 1.9706530155117195`*^-11, 
   " (", 0.010228, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797738995*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.2419003722090899`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.010079`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.2419003722090899, " (", 
   0.010079, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797750798*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "1.8853050585937478`*^-13", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.231326`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 1.8853050585937478`*^-13, 
   " (", 0.231326, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046327978021803`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.28245144371283926`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.233872`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.28245144371283926`, " (", 
   0.233872, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797852744*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "11", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 11, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463279786278*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632797873171*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "57.547939`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 57.547939, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632855388402*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "56.755424`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 56.755424, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463291214439*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "42.804162`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 42.804162, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632954947159*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", "3.938943`",
    "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 3.938943, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046329588852587`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "2048"}],
  SequenceForm["dim(H)=", 2048],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632958911817*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "6.94696602734252`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 6.94696602734252],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632958922546*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "562"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 562],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632958931855*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "1537", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 1537, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632958940886*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "5.3482126843050284`*^-11", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.021322`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 5.3482126843050284`*^-11, 
   " (", 0.021322, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632958949724*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.12703121513446802`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.021127`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.12703121513446802`, " (",
    0.021127, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632958980178*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "1.8983596065161112`*^-13", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "1.161815`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 1.8983596065161112`*^-13, 
   " (", 1.161815, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632959308154*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.16292795148051376`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "1.513451`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.16292795148051376`, " (", 
   1.513451, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632959690206*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "12", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 12, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632959701977*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804632959713924*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "242.682163`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 242.682163, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633202376272*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "242.469126`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 242.469126, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633444845755*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "173.731774`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 173.731774, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046336185776978`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", "31.308`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 31.308, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633649917069*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "4096"}],
  SequenceForm["dim(H)=", 4096],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633649966647*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "7.63519384215294`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 7.63519384215294],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463365001647*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "794"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 794],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633650067298*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "3073", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 3073, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046336501167727`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "1.2023282553709839`*^-12", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.209499`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 1.2023282553709839`*^-12, 
   " (", 0.209499, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046336501676903`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.17351219905073467`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.211781`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.17351219905073467`, " (",
    0.211781, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633650219096*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "1.4961002778943547`*^-15", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "10.267035`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 1.4961002778943547`*^-15, 
   " (", 10.267035, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463365275982*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.5846134136831712`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "10.526594`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.5846134136831712, " (", 
   10.526594, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046336556137238`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"N=\"\>", "\[InvisibleSpace]", "13", 
   "\[InvisibleSpace]", "\<\" | p=\"\>", "\[InvisibleSpace]", "0.015`", 
   "\[InvisibleSpace]", "\<\" | \[Theta]=\"\>", "\[InvisibleSpace]", 
   FractionBox["\[Pi]", "3"], "\[InvisibleSpace]", "\<\" | \[Epsilon]=\"\>", 
   "\[InvisibleSpace]", "0.2`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(1\\)]\\)=\"\
\>", "\[InvisibleSpace]", "4.199705077879927`", 
   "\[InvisibleSpace]", "\<\" | \\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0.015113637810048184`"}],
  SequenceForm[
  "N=", 13, " | p=", 0.015, " | \[Theta]=", Rational[1, 3] Pi, 
   " | \[Epsilon]=", 0.2, " | \!\(\*SubscriptBox[\(E\), \(1\)]\)=", 
   4.199705077879927, " | \!\(\*SubscriptBox[\(E\), \(0\)]\)=", 
   0.015113637810048184`],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633655661075*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"S(\[Rho]||\[Sigma])=\"\>", "\[InvisibleSpace]", 
   "3.0442902726508363`", 
   "\[InvisibleSpace]", "\<\" | V(\[Rho]||\[Sigma])=\"\>", 
   "\[InvisibleSpace]", "3.8654008760730703`", 
   "\[InvisibleSpace]", "\<\" || S(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "2.551747062484087`", 
   "\[InvisibleSpace]", "\<\" | V(\\!\\(\\*SubscriptBox[\\(\[Rho]\\), \
\\(D\\)]\\)||\[Sigma])=\"\>", "\[InvisibleSpace]", "5.256926499444563`", 
   "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm[
  "S(\[Rho]||\[Sigma])=", 3.0442902726508363`, " | V(\[Rho]||\[Sigma])=", 
   3.8654008760730703`, 
   " || S(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   2.551747062484087, 
   " | V(\!\(\*SubscriptBox[\(\[Rho]\), \(D\)]\)||\[Sigma])=", 
   5.256926499444563, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804633655674912*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Sigma] (\"\>", "\[InvisibleSpace]", 
   "1027.112041`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Precomputation for \[Sigma] (", 1027.112041, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804634682706501*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Precomputation for \[Rho] (\"\>", "\[InvisibleSpace]", 
   "1021.474016`", "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm["Precomputation for \[Rho] (", 1021.474016, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.80463570418054*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Generating list of \[Xi] (\"\>", "\[InvisibleSpace]", 
   "713.733085`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Generating list of \[Xi] (", 713.733085, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046364179140673`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Applying Gram-Schmidt (\"\>", "\[InvisibleSpace]", 
   "270.113317`", "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["Applying Gram-Schmidt (", 270.113317, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046366880272017`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(H)=\"\>", "\[InvisibleSpace]", "8192"}],
  SequenceForm["dim(H)=", 8192],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804636688235743*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(n\\), \\(*\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "8.32563968264986`"}],
  SequenceForm["\!\(\*SubscriptBox[\(n\), \(*\)]\)=", 8.32563968264986],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804636688249098*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(simp\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "1093"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(simp\)]\))=", 1093],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804636688260714*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"dim(\\!\\(\\*SubscriptBox[\\(H\\), \\(opt\\)]\\))=\"\>", 
   "\[InvisibleSpace]", "6145", "\[InvisibleSpace]", "\<\"\\n\"\>"}],
  SequenceForm["dim(\!\(\*SubscriptBox[\(H\), \(opt\)]\))=", 6145, "\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046366882721043`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "2.603278714819484`*^-14", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.090805`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(simp\)]\)=", 2.603278714819484*^-14, 
   " (", 0.090805, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046366883649673`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(simp\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.22528039488747564`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "0.091076`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(simp\)]\)=", 0.22528039488747564`, " (",
    0.091076, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804636688456477*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "4.4008544394338336`*^-17", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "74.598051`", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Beta]\), \(opt\)]\)=", 4.4008544394338336`*^-17, 
   " (", 74.598051, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.8046367080219917`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(opt\\)]\\)=\"\>", 
   "\[InvisibleSpace]", "0.2708847615383634`", 
   "\[InvisibleSpace]", "\<\" (\"\>", "\[InvisibleSpace]", "75.61021`", 
   "\[InvisibleSpace]", "\<\")\\n\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(\[Alpha]\), \(opt\)]\)=", 0.2708847615383634, " (", 
   75.61021, ")\n"],
  Editable->False]], "Print",
 CellChangeTimes->{3.804433727067411*^9, 3.8044340254732037`*^9, 
  3.804630282020368*^9, 3.804636728412694*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
We generate the plotting data and perform the plots. We first plot the type \
II error \[Beta].\
\>", "Text",
 CellChangeTimes->{{3.8044334078170967`*^9, 3.8044334156568823`*^9}, {
  3.804448562732956*^9, 3.804448564603446*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot\[Beta]opt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot\[Beta]simp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot\[Beta]opt", "=", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"Plot\[Beta]opt", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Optimal measurement\>\"", "}"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
       
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
       
       Editable->False,
       Selectable->False]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot\[Beta]simp", "=", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"Plot\[Beta]simp", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Likelihood ratio test\>\"", "}"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
       Editable->False,
       Selectable->False]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.796627475641227*^9, 3.7966275169059258`*^9}, {
  3.796627920843439*^9, 3.796627921785925*^9}, {3.7966282813903418`*^9, 
  3.796628283985716*^9}, {3.804448012469758*^9, 3.804448094950906*^9}},
 ExpressionUUID -> "7cb15d8f-aa69-4d85-8256-58702d52eb6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot\[Beta]opt", ",", "plot\[Beta]simp", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "n", "]"}], ",", 
      RowBox[{"HoldForm", "[", "\[Beta]", "]"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8044478890337963`*^9, 3.80444790423575*^9}, {
  3.8044480003507442`*^9, 3.804448008532077*^9}, {3.804448249922963*^9, 
  3.804448250512719*^9}, {3.804448451336132*^9, 3.804448451471881*^9}},
 NumberMarks->False,
 ExpressionUUID -> "755657f5-10b1-4853-8e1b-07ffe12b9c4a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[{{6., -16.74140082065222}, {
       7., -20.92725178742355}, {8., -21.70242886201224}, {
       9., -25.11329207076337}, {10., -29.299516566318715`}, {
       11., -29.29261606065593}, {12., -34.13591448692681}, {
       13., -37.66214786804673}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}, {{}, 
      GraphicsComplexBox[{{6., -14.114909126270824`}, {
       7., -17.97915593807949}, {8., -17.01089629972685}, {
       9., -20.806224591279335`}, {10., -24.65007105515676}, {
       11., -23.65167359554297}, {12., -27.446761226107256`}, {
       13., -31.279419607176234`}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}}, {AxesLabel -> {
       FormBox[
        TagBox["n", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\[Beta]", HoldForm], TraditionalForm]}, DisplayFunction -> 
     Identity, GridLines -> {None, None}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {5.890625, -39.1805891860028}, 
     PlotRange -> {{6., 13.}, {-38.82441159290199, -16.74140082065222}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {5.890625, -39.1805891860028}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{{{-36.841361487904734`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "16"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}, {
           AbsoluteThickness[0.1]}}, {-32.23619130191664, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}, {
           AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}, {
           AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}, {
           AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
          FormBox[
           TemplateBox[{"10", 
             RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> 
            SuperscriptBox], TraditionalForm], {0.01, 0.}, {
           AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
           AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
           AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
           AbsoluteThickness[0.1]}}, {-20.72326583694641, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
           AbsoluteThickness[0.1]}}, {-16.11809565095832, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
           AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
           AbsoluteThickness[0.1]}}}, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{6., 13.}, {-38.82441159290199, -16.74140082065222}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, {{-36.841361487904734`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "16"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-32.23619130191664, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-27.631021115928547`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-23.025850929940457`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm], {0.01, 0.}, {
          AbsoluteThickness[0.1]}}, {-34.538776394910684`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-29.933606208922594`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-25.328436022934504`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-20.72326583694641, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-16.11809565095832, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
         FormBox[
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[{0, 0}]], TraditionalForm], {0.005, 0.}, {
          AbsoluteThickness[0.1]}}}}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Optimal measurement\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.33986928104575165`, 
                    0.4888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Likelihood ratio test\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6248366013071895, 0.5176470588235295, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.802762950263098*^9, 3.804447819525569*^9, 3.804448001540344*^9, {
   3.804448088874093*^9, 3.80444809622676*^9}, 3.8044481465394373`*^9, 
   3.804448250867406*^9, 3.8044484518930273`*^9, 3.804636743328702*^9},
 ExpressionUUID -> "f4273af8-f518-40db-bdda-f3e588e357fa"]
}, Open  ]],

Cell["We plot the type I error \[Alpha].", "Text",
 CellChangeTimes->{{3.804448537845883*^9, 3.8044485414444036`*^9}, 
   3.804631409469397*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot\[Alpha]opt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "4", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot\[Alpha]simp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7964911185872602`*^9, 3.7964911298019037`*^9}, {
  3.796492114105995*^9, 3.796492114431979*^9}, {3.796492151445307*^9, 
  3.7964923158540792`*^9}, {3.7964923464921627`*^9, 3.7964923480865192`*^9}, {
  3.796500725077354*^9, 3.796500742885825*^9}, {3.804448109940729*^9, 
  3.804448111421599*^9}, {3.804448165660379*^9, 3.804448167202181*^9}},
 ExpressionUUID -> "c6a6efc2-7dcb-4535-9354-268ff0d9de65"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot\[Alpha]opt", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Plot\[Alpha]opt", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Optimal measurement\>\"", "}"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
       
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
       
       Editable->False,
       Selectable->False]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot\[Alpha]simp", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Plot\[Alpha]simp", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Likelihood ratio test\>\"", "}"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
       Editable->False,
       Selectable->False]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.804448223180642*^9, 3.804448228277813*^9}, {
  3.804448265060479*^9, 3.8044482780337563`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot\[Alpha]opt", ",", "plot\[Alpha]simp", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "n", "]"}], ",", 
      RowBox[{"HoldForm", "[", "\[Alpha]", "]"}]}], "}"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.8044482640662193`*^9, 3.804448267225616*^9}, {
  3.804448446288303*^9, 3.80444844685614*^9}, {3.8044485256409197`*^9, 
  3.804448525893339*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[{{6., 0.21189986584234477`}, {7., 
       0.2931124707663477}, {8., 0.5984325106633319}, {9., 
       0.2167233225154257}, {10., 0.28245144371283926`}, {11., 
       0.16292795148051376`}, {12., 0.5846134136831712}, {13., 
       0.2708847615383634}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}, {{}, 
      GraphicsComplexBox[{{6., 0.18147440442722362`}, {7., 
       0.2593154733607206}, {8., 0.12445582143343625`}, {9., 
       0.18001799802747775`}, {10., 0.2419003722090899}, {11., 
       0.12703121513446802`}, {12., 0.17351219905073467`}, {13., 
       0.22528039488747564`}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}}, {AxesLabel -> {
       FormBox[
        TagBox["n", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\[Alpha]", HoldForm], TraditionalForm]}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {5.890625, 0}, 
     PlotRange -> {{6., 13.}, {0, 0.5984325106633319}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {5.890625, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{6., 13.}, {0, 0.5984325106633319}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Optimal measurement\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.33986928104575165`, 
                    0.4888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Likelihood ratio test\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6248366013071895, 0.5176470588235295, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.804448267507568*^9, 3.8044482791729*^9}, 
   3.804448447256967*^9, 3.8044485262923822`*^9, 3.8046367478160543`*^9}]
}, Open  ]],

Cell["We plot the dimensions of the acceptance subspaces.", "Text",
 CellChangeTimes->{{3.80444857332446*^9, 3.804448583900881*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotDimSimp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       FractionBox[
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], 
        SuperscriptBox["2", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"PlotDimOpt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       FractionBox[
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}], 
        SuperscriptBox["2", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.796500753073779*^9, 3.7965008220983057`*^9}, 
   3.796627600890571*^9, {3.8026023672241917`*^9, 3.802602368544299*^9}, 
   3.804631465079432*^9},
 ExpressionUUID -> "0a369401-8fb5-4f12-8474-8e5624c18be8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotDimOpt", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"PlotDimOpt", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Optimal measurement\>\"", "}"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
       
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotDimSimp", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"PlotDimSimp", ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"SwatchLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Likelihood ratio test\>\"", "}"}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
      ",", 
      RowBox[{"MeshStyle", "\[Rule]", 
       RowBox[{"{", 
        InterpretationBox[
         ButtonBox[
          TooltipBox[
           GraphicsBox[{
             {GrayLevel[0], RectangleBox[{0, 0}]}, 
             {GrayLevel[0], RectangleBox[{1, -1}]}, 
             {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
              RectangleBox[{0, -1}, {2, 1}]}},
            AspectRatio->1,
            Frame->True,
            FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
            FrameTicks->None,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}],
            PlotRangePadding->None],
           "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
          Appearance->None,
          BaseStyle->{},
          BaselinePosition->Baseline,
          ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
            If[
             Not[
              AbsoluteCurrentValue["Deployed"]], 
             SelectionMove[Typeset`box$, All, Expression]; 
             FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
             FrontEnd`Private`$ColorSelectorInitialColor = 
              RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
             FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[Typeset`box$, 
                FrontEndResource["RGBColorValueSelector"], {
                0, {Left, Bottom}}, {Left, Top}, 
                "ClosingActions" -> {
                 "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
          DefaultBaseStyle->{},
          Evaluator->Automatic,
          Method->"Preemptive"],
         RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
         Editable->False,
         Selectable->False], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
        Editable->False,
        Selectable->False]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plotDimOpt", ",", "plotDimSimp", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "n", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       FractionBox[
        RowBox[{"dim", " ", "Hacc"}], 
        RowBox[{"dim", " ", "H"}]], "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.79650082836695*^9, 3.7965008304722233`*^9}, {
   3.796627609435524*^9, 3.7966277065406313`*^9}, {3.7966277626795*^9, 
   3.79662777223951*^9}, {3.796627853514135*^9, 3.796627902862554*^9}, {
   3.804448611112444*^9, 3.804448619680228*^9}, 3.804448652148964*^9},
 ExpressionUUID -> "c34a0129-e944-4ca9-bd38-0b355138f3f2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[{{6., 0.515625}, {7., 0.5078125}, {8., 0.50390625}, {
       9., 0.50390625}, {10., 0.501953125}, {11., 0.75048828125}, {12., 
       0.750244140625}, {13., 0.7501220703125}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}, {{}, 
      GraphicsComplexBox[{{6., 0.34375}, {7., 0.2265625}, {8., 0.36328125}, {
       9., 0.25390625}, {10., 0.171875}, {11., 0.2744140625}, {12., 
       0.19384765625}, {13., 0.1334228515625}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}}, {AxesLabel -> {
       FormBox[
        TagBox["n", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         FractionBox[
          RowBox[{"dim", " ", "Hacc"}], 
          RowBox[{"dim", " ", "H"}]], HoldForm], TraditionalForm]}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {5.890625, 0}, 
     PlotRange -> {{6., 13.}, {0, 1}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {5.890625, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{6., 13.}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Optimal measurement\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.33986928104575165`, 
                    0.4888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Likelihood ratio test\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6248366013071895, 0.5176470588235295, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.796627654729714*^9, 3.7966277067566967`*^9}, {
   3.796627766654755*^9, 3.796627772575026*^9}, {3.7966278674193583`*^9, 
   3.796627903501618*^9}, 3.802599789317024*^9, 3.802600704286194*^9, 
   3.802600903822345*^9, 3.802602384703924*^9, 3.802605857484352*^9, 
   3.8026068676530504`*^9, 3.8026074421720676`*^9, 3.80260830348343*^9, 
   3.8026083538332815`*^9, {3.8026121455799575`*^9, 3.8026121682603197`*^9}, 
   3.802704770630333*^9, 3.8027623533051476`*^9, {3.804448591030354*^9, 
   3.804448619983574*^9}, 3.804448652520054*^9, 3.804636753521525*^9},
 ExpressionUUID -> "312367c1-cf0e-49d8-b876-caf69a873a67"]
}, Open  ]],

Cell["\<\
We plot the \[OpenCurlyDoubleQuote]complexity\[CloseCurlyDoubleQuote] as \
defined from the minimal dimension between the acceptance subspace and its \
complement.\
\>", "Text",
 CellChangeTimes->{{3.804448673016919*^9, 3.804448694670639*^9}, {
  3.804448756480438*^9, 3.8044487672843533`*^9}, {3.804631431504518*^9, 
  3.8046314323934526`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotCompSimp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"PlotCompOpt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Log", "[", 
        RowBox[{
         SuperscriptBox["2", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]], "-", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8026083732731743`*^9, 3.8026084309427757`*^9}, {
  3.8026085027321205`*^9, 3.8026085273723383`*^9}, {3.802608577301761*^9, 
  3.802608581672241*^9}, {3.8026086147215853`*^9, 3.8026086431719923`*^9}},
 ExpressionUUID -> "1fd7051b-7c4f-4edb-8d4a-f4babe5d74a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotCompOpt", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"PlotCompOpt", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Optimal measurement\>\"", "}"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          
          "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[
              0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.12156862745098039`, 0.5098039215686274, 0.7333333333333333], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08104575163398693, 0.33986928104575165`, 0.4888888888888889],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.12156862745098039`, 0.5098039215686274, 0.7333333333333333],
       
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotCompSimp", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"PlotCompSimp", ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"SwatchLegend", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Likelihood ratio test\>\"", "}"}], ",", 
        RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], "]"}]}], 
     ",", 
     RowBox[{"MeshStyle", "\[Rule]", 
      RowBox[{"{", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
        Editable->False,
        Selectable->False], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6248366013071895, 0.5176470588235295, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.9372549019607843, 0.7764705882352941, 0.],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8026084659426975`*^9, 3.8026084959827013`*^9}, {
  3.8026085365021257`*^9, 3.8026085435422173`*^9}, {3.8026086770717206`*^9, 
  3.8026087078913317`*^9}, {3.802608780551335*^9, 3.8026087842193985`*^9}, {
  3.804448710205674*^9, 3.8044487369526577`*^9}},
 ExpressionUUID -> "7c4e4281-c04a-4ae7-a63b-5b6dead8d44d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plotCompOpt", ",", "plotCompSimp", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "n", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"Log", " ", 
        RowBox[{"(", 
         RowBox[{"dim", " ", "Hacc"}], ")"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8044487291552877`*^9, 3.804448733429798*^9}},
 NumberMarks->False,
 ExpressionUUID -> "57c9c2cc-dc43-49bc-8091-04bd0de2f82c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[{{6., 3.4339872044851463`}, {7., 
       4.143134726391533}, {8., 4.844187086458591}, {9., 5.537334267018537}, {
       10., 6.234410725718371}, {11., 6.236369590203704}, {12., 
       6.930494765951626}, {13., 7.624130585661289}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[
           0.12156862745098039`, 0.5098039215686274, 0.7333333333333333]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}, {{}, 
      GraphicsComplexBox[{{6., 3.091042453358316}, {7., 3.367295829986474}, {
       8., 4.532599493153256}, {9., 4.867534450455582}, {10., 
       5.170483995038151}, {11., 6.331501849893691}, {12., 
       6.677083461247136}, {13., 6.996681488176539}}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8}]}}, {{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           AbsolutePointSize[6], 
           RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
          PointBox[{1, 2, 3, 4, 5, 6, 7, 8}]}, {}, {}}}], {}}}, {AxesLabel -> {
       FormBox[
        TagBox["n", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         RowBox[{"Log", " ", 
           RowBox[{"(", 
             RowBox[{"dim", " ", "Hacc"}], ")"}]}], HoldForm], 
        TraditionalForm]}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {5.890625, 0}, 
     PlotRange -> {{6., 13.}, {0, 10}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {5.890625, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{6., 13.}, {0, 10}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Optimal measurement\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.08104575163398693, 0.33986928104575165`, 
                    0.4888888888888889], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.12156862745098039, 0.5098039215686274, \
0.7333333333333333]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Likelihood ratio test\""}, "SwatchLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6248366013071895, 0.5176470588235295, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9372549019607843, 0.7764705882352941, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9372549019607843, 0.7764705882352941, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}], "}"}], 
               ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.802762771723546*^9, {3.804448733748757*^9, 3.8044487378471413`*^9}, 
   3.8044487703599463`*^9, 3.804636758957061*^9},
 ExpressionUUID -> "0c0b273d-7951-47a1-bcce-cb55e82710d6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{982, 668},
WindowMargins->{{217, Automatic}, {Automatic, 30}},
Magnification->1.5,
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1439, 24, 459, "Text"],
Cell[CellGroupData[{
Cell[2022, 48, 121, 1, 95, "Section"],
Cell[CellGroupData[{
Cell[2168, 53, 93, 1, 65, "Subsection"],
Cell[2264, 56, 188, 2, 46, "Text"],
Cell[2455, 60, 2050, 61, 259, "Input"],
Cell[CellGroupData[{
Cell[4530, 125, 204, 3, 43, "Input"],
Cell[4737, 130, 2498, 67, 102, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7284, 203, 213, 3, 51, "Subsection"],
Cell[7500, 208, 356, 6, 76, "Text"],
Cell[CellGroupData[{
Cell[7881, 218, 331, 9, 43, "Input"],
Cell[8215, 229, 624, 13, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8876, 247, 478, 12, 43, "Input"],
Cell[9357, 261, 804, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10198, 284, 164, 3, 43, "Input"],
Cell[10365, 289, 522, 15, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10924, 309, 653, 16, 96, "Input"],
Cell[11580, 327, 1458, 42, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13075, 374, 215, 4, 43, "Input"],
Cell[13293, 380, 864, 25, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14194, 410, 111, 1, 52, "Subsubsection"],
Cell[14308, 413, 279, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[14612, 423, 348, 8, 43, "Input"],
Cell[14963, 433, 850, 26, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15850, 464, 328, 8, 43, "Input"],
Cell[16181, 474, 731, 20, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16949, 499, 345, 8, 72, "Input"],
Cell[17297, 509, 9550, 168, 352, "Output"]
}, Open  ]],
Cell[26862, 680, 262, 5, 76, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27161, 690, 108, 1, 52, "Subsubsection"],
Cell[27272, 693, 229, 4, 76, "Text"],
Cell[CellGroupData[{
Cell[27526, 701, 507, 15, 43, "Input"],
Cell[28036, 718, 1160, 34, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29233, 757, 342, 10, 43, "Input"],
Cell[29578, 769, 2965, 84, 146, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32580, 858, 171, 4, 43, "Input"],
Cell[32754, 864, 1718, 56, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34509, 925, 748, 18, 96, "Input"],
Cell[35260, 945, 5279, 145, 292, "Output"]
}, Open  ]],
Cell[40554, 1093, 378, 6, 76, "Text"],
Cell[CellGroupData[{
Cell[40957, 1103, 825, 24, 69, "Input"],
Cell[41785, 1129, 34622, 582, 352, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76444, 1716, 822, 24, 69, "Input"],
Cell[77269, 1742, 49036, 819, 352, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[126366, 2568, 212, 3, 51, "Subsection"],
Cell[126581, 2573, 324, 6, 76, "Text"],
Cell[126908, 2581, 38759, 946, 4705, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[165704, 3532, 207, 3, 51, "Subsection"],
Cell[165914, 3537, 1358, 23, 372, "Text"],
Cell[CellGroupData[{
Cell[167297, 3564, 4439, 85, 427, "Input"],
Cell[CellGroupData[{
Cell[171761, 3653, 981, 18, 50, "Print"],
Cell[172745, 3673, 1006, 20, 54, "Print"],
Cell[173754, 3695, 367, 7, 30, "Print"],
Cell[174124, 3704, 366, 7, 54, "Print"],
Cell[174493, 3713, 359, 7, 30, "Print"],
Cell[174855, 3722, 353, 7, 30, "Print"],
Cell[175211, 3731, 265, 6, 30, "Print"],
Cell[175479, 3739, 364, 7, 30, "Print"],
Cell[175846, 3748, 348, 7, 35, "Print"],
Cell[176197, 3757, 391, 7, 57, "Print"],
Cell[176591, 3766, 531, 11, 38, "Print"],
Cell[177125, 3779, 533, 11, 57, "Print"],
Cell[177661, 3792, 527, 11, 38, "Print"],
Cell[178191, 3805, 531, 11, 57, "Print"],
Cell[178725, 3818, 983, 18, 50, "Print"],
Cell[179711, 3838, 1008, 20, 54, "Print"],
Cell[180722, 3860, 367, 7, 30, "Print"],
Cell[181092, 3869, 368, 7, 54, "Print"],
Cell[181463, 3878, 359, 7, 30, "Print"],
Cell[181825, 3887, 355, 7, 30, "Print"],
Cell[182183, 3896, 267, 6, 30, "Print"],
Cell[182453, 3904, 364, 7, 30, "Print"],
Cell[182820, 3913, 349, 7, 35, "Print"],
Cell[183172, 3922, 389, 7, 57, "Print"],
Cell[183564, 3931, 532, 11, 38, "Print"],
Cell[184099, 3944, 532, 11, 57, "Print"],
Cell[184634, 3957, 529, 11, 38, "Print"],
Cell[185166, 3970, 528, 11, 57, "Print"],
Cell[185697, 3983, 983, 18, 50, "Print"],
Cell[186683, 4003, 1008, 20, 54, "Print"],
Cell[187694, 4025, 364, 7, 30, "Print"],
Cell[188061, 4034, 364, 7, 54, "Print"],
Cell[188428, 4043, 359, 7, 30, "Print"],
Cell[188790, 4052, 353, 7, 30, "Print"],
Cell[189146, 4061, 267, 6, 30, "Print"],
Cell[189416, 4069, 363, 7, 30, "Print"],
Cell[189782, 4078, 351, 7, 35, "Print"],
Cell[190136, 4087, 391, 7, 57, "Print"],
Cell[190530, 4096, 531, 11, 38, "Print"],
Cell[191064, 4109, 535, 11, 57, "Print"],
Cell[191602, 4122, 531, 11, 38, "Print"],
Cell[192136, 4135, 528, 11, 57, "Print"],
Cell[192667, 4148, 983, 18, 50, "Print"],
Cell[193653, 4168, 1008, 20, 54, "Print"],
Cell[194664, 4190, 365, 7, 30, "Print"],
Cell[195032, 4199, 366, 7, 54, "Print"],
Cell[195401, 4208, 359, 7, 30, "Print"],
Cell[195763, 4217, 353, 7, 30, "Print"],
Cell[196119, 4226, 267, 6, 30, "Print"],
Cell[196389, 4234, 366, 7, 30, "Print"],
Cell[196758, 4243, 351, 7, 35, "Print"],
Cell[197112, 4252, 391, 7, 57, "Print"],
Cell[197506, 4261, 533, 11, 38, "Print"],
Cell[198042, 4274, 533, 11, 57, "Print"],
Cell[198578, 4287, 529, 11, 38, "Print"],
Cell[199110, 4300, 530, 11, 57, "Print"],
Cell[199643, 4313, 985, 18, 50, "Print"],
Cell[200631, 4333, 1006, 20, 54, "Print"],
Cell[201640, 4355, 367, 7, 30, "Print"],
Cell[202010, 4364, 366, 7, 54, "Print"],
Cell[202379, 4373, 361, 7, 30, "Print"],
Cell[202743, 4382, 353, 7, 30, "Print"],
Cell[203099, 4391, 269, 6, 30, "Print"],
Cell[203371, 4399, 367, 7, 30, "Print"],
Cell[203741, 4408, 353, 7, 35, "Print"],
Cell[204097, 4417, 391, 7, 57, "Print"],
Cell[204491, 4426, 534, 11, 38, "Print"],
Cell[205028, 4439, 530, 11, 57, "Print"],
Cell[205561, 4452, 534, 11, 38, "Print"],
Cell[206098, 4465, 531, 11, 57, "Print"],
Cell[206632, 4478, 982, 18, 50, "Print"],
Cell[207617, 4498, 1006, 20, 54, "Print"],
Cell[208626, 4520, 367, 7, 30, "Print"],
Cell[208996, 4529, 367, 7, 54, "Print"],
Cell[209366, 4538, 361, 7, 30, "Print"],
Cell[209730, 4547, 355, 7, 30, "Print"],
Cell[210088, 4556, 269, 6, 30, "Print"],
Cell[210360, 4564, 362, 7, 30, "Print"],
Cell[210725, 4573, 351, 7, 35, "Print"],
Cell[211079, 4582, 393, 7, 57, "Print"],
Cell[211475, 4591, 534, 11, 38, "Print"],
Cell[212012, 4604, 533, 11, 57, "Print"],
Cell[212548, 4617, 532, 11, 38, "Print"],
Cell[213083, 4630, 531, 11, 57, "Print"],
Cell[213617, 4643, 983, 18, 50, "Print"],
Cell[214603, 4663, 1006, 20, 54, "Print"],
Cell[215612, 4685, 369, 7, 30, "Print"],
Cell[215984, 4694, 370, 7, 54, "Print"],
Cell[216357, 4703, 365, 7, 30, "Print"],
Cell[216725, 4712, 349, 7, 30, "Print"],
Cell[217077, 4721, 269, 6, 30, "Print"],
Cell[217349, 4729, 361, 7, 30, "Print"],
Cell[217713, 4738, 351, 7, 35, "Print"],
Cell[218067, 4747, 395, 7, 57, "Print"],
Cell[218465, 4756, 536, 11, 38, "Print"],
Cell[219004, 4769, 533, 11, 57, "Print"],
Cell[219540, 4782, 533, 11, 38, "Print"],
Cell[220076, 4795, 532, 11, 57, "Print"],
Cell[220611, 4808, 983, 18, 50, "Print"],
Cell[221597, 4828, 1006, 20, 54, "Print"],
Cell[222606, 4850, 371, 7, 30, "Print"],
Cell[222980, 4859, 371, 7, 54, "Print"],
Cell[223354, 4868, 365, 7, 30, "Print"],
Cell[223722, 4877, 359, 7, 30, "Print"],
Cell[224084, 4886, 269, 6, 30, "Print"],
Cell[224356, 4894, 362, 7, 30, "Print"],
Cell[224721, 4903, 353, 7, 35, "Print"],
Cell[225077, 4912, 395, 7, 57, "Print"],
Cell[225475, 4921, 533, 11, 38, "Print"],
Cell[226011, 4934, 533, 11, 57, "Print"],
Cell[226547, 4947, 536, 11, 38, "Print"],
Cell[227086, 4960, 528, 11, 57, "Print"]
}, Open  ]]
}, Open  ]],
Cell[227641, 4975, 238, 5, 46, "Text"],
Cell[227882, 4982, 980, 32, 69, "Input"],
Cell[228865, 5016, 8836, 220, 169, "Input"],
Cell[CellGroupData[{
Cell[237726, 5240, 585, 13, 43, "Input"],
Cell[238314, 5255, 21106, 442, 365, "Output"]
}, Open  ]],
Cell[259435, 5700, 144, 2, 46, "Text"],
Cell[259582, 5704, 1405, 38, 69, "Input"],
Cell[260990, 5744, 8678, 218, 169, "Input"],
Cell[CellGroupData[{
Cell[269693, 5966, 462, 11, 43, "Input"],
Cell[270158, 5979, 14554, 290, 373, "Output"]
}, Open  ]],
Cell[284727, 6272, 132, 1, 46, "Text"],
Cell[284862, 6275, 1479, 44, 132, "Input"],
Cell[CellGroupData[{
Cell[286366, 6323, 9758, 242, 338, "Input"],
Cell[296127, 6567, 14860, 291, 393, "Output"]
}, Open  ]],
Cell[311002, 6861, 355, 7, 76, "Text"],
Cell[311360, 6870, 1470, 43, 132, "Input"],
Cell[312833, 6915, 9243, 230, 219, "Input"],
Cell[CellGroupData[{
Cell[322101, 7149, 523, 14, 69, "Input"],
Cell[322627, 7165, 14557, 289, 367, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

